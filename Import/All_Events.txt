[{"code":"//setOnCameraMoveListener\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"_###_controller.setGoogleMap(_googleMap);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003eadd\n_###_controller.setOnCameraMoveListener(new GoogleMap.OnCameraMoveListener() {\n      @Override\n      public void onCameraMove() {\n\n        LatLng center \u003d _###_controller.getGoogleMap().getCameraPosition().target;\n        double _latitude \u003d center.latitude;\n        double _longitude \u003d center.longitude;\n        %s\n      }\n    });\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/","s":"true","imports":"com.google.android.gms.maps.model.LatLng","name":"setOnCameraMoveListener"},{"code":"//setOnCameraIdleListener\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"_###_controller.setGoogleMap(_googleMap);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003eadd\n_###_controller.setOnCameraIdleListener(new GoogleMap.OnCameraIdleListener() {\n      @Override\n      public void onCameraIdle() {\n\n        LatLng center \u003d _###_controller.getGoogleMap().getCameraPosition().target;\n        double _latitude \u003d center.latitude;\n        double _longitude \u003d center.longitude;\n        %s\n      }\n    });\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/","s":"true","imports":"com.google.android.gms.maps.model.LatLng","name":"setOnCameraIdleListener"},{"code":"//SpeedDialView\n%s","s":"true","imports":"","name":"SpeedDialView"},{"code":"//SuperUser\n%s","s":"true","imports":"","name":"SuperUser"},{"code":"//Text Encryptor\n%s","s":"true","imports":"","name":"Text Encryptor"},{"s":"true","code":"//PdfReader\n%d","imports":"","name":"PdfReader"},{"code":"//ShareApp\n%s","s":"true","imports":"","name":"ShareApp"},{"s":"true","code":"//WindowProgress\npublic void _ArabWareComponent () {\n}\npublic static class WP7ProgressBar extends LinearLayout {\r\n    private static final int INTERVAL_DEF \u003d 150;\r\n    private static final int INDICATOR_COUNT_DEF \u003d 5;\r\n    private static final int ANIMATION_DURATION_DEF \u003d 2200;\r\n    private static final int INDICATOR_HEIGHT_DEF \u003d 5;\r\n    private static final int INDICATOR_RADIUS_DEF \u003d 0;\r\n    private int interval;\r\n    private int animationDuration;\r\n    private int indicatorHeight;\r\n    private int indicatorColor;\r\n    private int indicatorRadius;\r\n    private boolean isShowing \u003d false;\r\n    private ArrayList\u003cWP7Indicator\u003e WP7Indicators;\r\n    private Handler handler;\r\n    private int progressBarCount \u003d 0;\r\n    private ObjectAnimator objectAnimator;\r\n    public WP7ProgressBar(Context context) {\r\n        super(context);\r\n        initialize(null);\n}\n  public WP7ProgressBar(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n        initialize(attrs);\r\n    }\r\n    public WP7ProgressBar(Context context, AttributeSet attrs, int defStyleAttr) {\r\n        super(context, attrs, defStyleAttr);\r\n        initialize(attrs);\r\n    }\r\n    private void initialize(AttributeSet attrs) {\r\n        this.setGravity(Gravity.CENTER);\r\n        this.setOrientation(HORIZONTAL);\r\n        this.handler \u003d new Handler();\r\n        setAttributes(attrs);\r\n        initializeIndicators();\r\n    }\r\n    private void setAttributes(AttributeSet attributeSet) {\r\n        //TypedArray typedArray \u003d getContext().obtainStyledAttributes(attributeSet, R.styleable.WP7ProgressBar);\r\n        interval \u003d INTERVAL_DEF;\r\n        animationDuration \u003d ANIMATION_DURATION_DEF;\r\n        indicatorHeight \u003d INDICATOR_HEIGHT_DEF;\r\n        indicatorRadius \u003d INDICATOR_RADIUS_DEF;\r\n        indicatorColor \u003d Color.BLUE; //Context.getColor(getContext(), R.color.colorAccent);\r\n        //typedArray.recycle();\r\n    }\n%s\n    public void setInterval(int interval) {\r\n        this.interval \u003d interval;\r\n        initializeIndicators();\r\n    }\r\n    public void setAnimationDuration(int animationDuration) {\r\n        this.animationDuration \u003d animationDuration;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorHeight(int indicatorHeight) {\r\n        this.indicatorHeight \u003d indicatorHeight;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorColor(int indicatorColor) {\r\n        this.indicatorColor \u003d indicatorColor;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorRadius(int indicatorRadius) {\r\n        this.indicatorRadius \u003d indicatorRadius;\r\n        initializeIndicators();\r\n    }\r\n}\r\n\r\npublic static class WP10ProgressBar extends RelativeLayout {\r\n    private static final int INTERVAL_DEF \u003d 150;\r\n    private static final int INDICATOR_COUNT_DEF \u003d 5;\r\n    private static final int ANIMATION_DURATION_DEF \u003d 1800;\r\n    private static final int INDICATOR_HEIGHT_DEF \u003d 7;\r\n    private static final int INDICATOR_RADIUS_DEF \u003d 0;\r\n    private int interval;\r\n    private int animationDuration;\r\n    private int indicatorHeight;\r\n    private int indicatorColor;\r\n    private int indicatorRadius;\r\n    private boolean isShowing \u003d false;\r\n    private ArrayList\u003cWP10Indicator\u003e wp10Indicators;\r\n    private Handler handler;\r\n    private int progressBarCount \u003d 0;\r\n    public WP10ProgressBar(Context context) {\r\n        super(context);\r\n        initialize(null);\r\n    }\r\n    public WP10ProgressBar(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n        initialize(attrs);\r\n    }\r\n    public WP10ProgressBar(Context context, AttributeSet attrs, int defStyleAttr) {\r\n        super(context, attrs, defStyleAttr);\r\n        initialize(attrs);\r\n    }\r\n    private void initialize(AttributeSet attrs) {\r\n        this.setGravity(Gravity.CENTER);\r\n        this.handler \u003d new Handler();\r\n        this.setRotation(-25);\r\n        setAttributes(attrs);\r\n        initializeIndicators();\r\n    }\r\n    private void setAttributes(AttributeSet attributeSet) {\r\n        //TypedArray typedArray \u003d getContext().obtainStyledAttributes(attributeSet, R.styleable.WP10ProgressBar);\r\n        interval \u003d INTERVAL_DEF;\r\n        animationDuration \u003d ANIMATION_DURATION_DEF;\r\n        indicatorHeight \u003d INDICATOR_HEIGHT_DEF;\r\n        indicatorRadius \u003d INDICATOR_RADIUS_DEF;\r\n        indicatorColor \u003d Color.BLUE;\r\n    }\r\n    private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c wp10Indicators.size(); i++) {\r\n            wp10Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\r\n        }\r\n    }\r\n    private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP10Indicator\u003e WP10Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP10Indicator wp10Indicator \u003d new WP10Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius, i);\r\n            WP10Indicators.add(wp10Indicator);\r\n            this.addView(wp10Indicator);\r\n        }\r\n        this.wp10Indicators \u003d WP10Indicators;\r\n    }\r\n    private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\r\n    }\r\n    private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\r\n    }\r\n    private void clearIndicatorsAnimations() {\r\n        for (WP10Indicator wp10Indicator : wp10Indicators) {\r\n            wp10Indicator.removeAnim();\r\n        }\r\n    }\r\n    public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    WP10ProgressBar.this.show();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                    WP10ProgressBar.this.hide();\r\n                }\r\n            }\r\n        }, 50);\r\n    }\r\n    public void setInterval(int interval) {\r\n        this.interval \u003d interval;\r\n        initializeIndicators();\r\n    }\r\n    public void setAnimationDuration(int animationDuration) {\r\n        this.animationDuration \u003d animationDuration;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorHeight(int indicatorHeight) {\r\n        this.indicatorHeight \u003d indicatorHeight;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorColor(int indicatorColor) {\r\n        this.indicatorColor \u003d indicatorColor;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorRadius(int indicatorRadius) {\r\n        this.indicatorRadius \u003d indicatorRadius;\r\n        initializeIndicators();\r\n    }\r\n}\r\n\r\n\r\npublic static class Base10Indicator extends View {\r\n    private int color;\r\n    public Base10Indicator(Context context, int indicatorHeight, int color, int radius) {\r\n        super(context);\r\n        this.color \u003d color;\r\n        initialize(indicatorHeight, radius);\r\n    }\r\n    private void initialize(int indicatorHeight, int radius) {\r\n        this.setBackground(getCube(radius));\r\n        LinearLayout.LayoutParams layoutParams \u003d new LinearLayout.LayoutParams(Utils.px2dp(getContext(), indicatorHeight), Utils.px2dp(getContext(), indicatorHeight));\r\n        this.setLayoutParams(layoutParams);\r\n    }\r\n    private android.graphics.drawable.GradientDrawable getCube(int radius) {\r\n        android.graphics.drawable.GradientDrawable drawable \u003d new android.graphics.drawable.GradientDrawable();\r\n        drawable.setShape(android.graphics.drawable.GradientDrawable.RECTANGLE);\r\n        drawable.setColor(color);\r\n        drawable.setCornerRadius(Utils.px2dp(getContext(), radius));\r\n        return drawable;\r\n    }\r\n}\r\n\r\npublic static class Utils {\r\n    public static int px2dp(Context context, int px) {\r\n        float scale \u003d context.getResources().getDisplayMetrics().density;\r\n        return (int) (px * scale + 0.5f);\r\n    }\r\n}\r\n\r\nstatic class WP7Indicator extends View {\r\n    private ObjectAnimator objectAnimator;\r\n    private int color;\r\n    public WP7Indicator(Context context, int indicatorHeight, int color, int radius) {\r\n        super(context);\r\n        this.color \u003d color;\r\n        initialize(indicatorHeight, radius);\r\n    }\r\n    private void initialize(int indicatorHeight, int radius) {\r\n        this.setBackground(getCube(radius));\r\n        LinearLayout.LayoutParams layoutParams \u003d new LinearLayout.LayoutParams(Utils.px2dp(getContext(), indicatorHeight), Utils.px2dp(getContext(), indicatorHeight));\r\n        layoutParams.rightMargin \u003d Utils.px2dp(getContext(), (int) (1.5f * indicatorHeight));\r\n        this.setLayoutParams(layoutParams);\r\n        startAnim(0, 0);\r\n        removeAnim();\r\n    }\r\n    private android.graphics.drawable.GradientDrawable getCube(int radius) {\r\n        android.graphics.drawable.GradientDrawable drawable \u003d new android.graphics.drawable.GradientDrawable();\r\n        drawable.setShape(android.graphics.drawable.GradientDrawable.RECTANGLE);\r\n        drawable.setColor(color);\r\n        drawable.setCornerRadius(Utils.px2dp(getContext(), radius));\r\n        return drawable;\r\n    }\r\n    public void startAnim(long animationDuration, long delay) {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", +1000, -1000);\r\n        objectAnimator.setInterpolator(new WPInterpolator());\r\n        objectAnimator.setDuration(animationDuration);\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.setStartDelay(delay);\r\n        objectAnimator.start();\r\n    }\r\n    public void removeAnim() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\r\n    }\r\n}\r\n\r\npublic static class WP10Indicator extends RelativeLayout {\r\n    private Base10Indicator base10Indicator;\r\n    private ObjectAnimator objectAnimator;\r\n    private int number;\r\n    public WP10Indicator(Context context, int indicatorHeight, int color, int radius, int number) {\r\n        super(context);\r\n        initialize(indicatorHeight, color, radius, number);\r\n    }\r\n    private void initialize(int indicatorHeight, int color, int radius, int number) {\r\n        this.number \u003d number;\r\n        this.base10Indicator \u003d new Base10Indicator(getContext(), indicatorHeight, color, radius);\r\n        RelativeLayout.LayoutParams layoutParams \u003d new LayoutParams(Utils.px2dp(getContext(), indicatorHeight * 8),\r\n                Utils.px2dp(getContext(), indicatorHeight * 8));\r\n        this.setLayoutParams(layoutParams);\r\n        this.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);\r\n        this.addView(base10Indicator);\r\n        startAnim(0, 0);\r\n        removeAnim();\r\n        this.setAlpha(0f);\r\n    }\r\n    public void startAnim(final long animationDuration, final long delay) {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"rotation\", (number * 15), -360 + (number * 15));\r\n        objectAnimator.setInterpolator(new WPInterpolator());\r\n        objectAnimator.setDuration(animationDuration);\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(2);\r\n        objectAnimator.addListener(new android.animation.Animator.AnimatorListener() {\r\n            @Override\r\n            public void onAnimationStart(android.animation.Animator animator) {\r\n                WP10Indicator.this.setAlpha(1f);\r\n                startAlphaAnimation(animationDuration);\r\n            }\r\n            @Override\r\n            public void onAnimationEnd(android.animation.Animator animator) {\r\n                removeAnim();\r\n                startAnim(animationDuration, 0);\r\n            }\r\n            @Override\r\n            public void onAnimationCancel(android.animation.Animator animator) {\r\n            }\r\n            @Override\r\n            public void onAnimationRepeat(android.animation.Animator animator) {\r\n            }\r\n        });\r\n        objectAnimator.setStartDelay(delay);\r\n        objectAnimator.start();\r\n    }\r\n    public void startAlphaAnimation(long animationDuration) {\r\n        this.animate().alpha(0).setDuration(animationDuration / 12).setStartDelay(2 * animationDuration);\r\n    }\r\n    public void removeAnim() {\r\n        this.animate().alpha(0f).setDuration(0).setStartDelay(0);\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\r\n    }\r\n}\r\n\r\npublic static class WPInterpolator implements android.view.animation.Interpolator {\r\n    @Override\r\n    public float getInterpolation(float v) {\r\n        if (v \u003e 0.3f \u0026\u0026 v \u003c 0.70f)\r\n            return (float) ((-(v - 0.5) / 6) + 0.5f);\r\n        return (float) ((-4) * Math.pow(v - 0.5, 3) + 0.5);\r\n    }\r\n}","imports":"","name":"WindowProgress"},{"code":"//Comments Maker\n%s","s":"true","imports":"","name":"Comments Maker"},{"s":"true","code":"//MoreBlockMaker\n%s","imports":"","name":"MoreBlockMaker"},{"s":"true","code":"//OnTouch\n###.setOnTouchListener(new View.OnTouchListener(){\n\t@Override\n\tpublic boolean onTouch(View v, MotionEvent event){\n\t\tint ev \u003d event.getAction();\n\t\tswitch (ev) {\n\t\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\t\n\t\t\t %s\n\t\t\t\n\t\t\tbreak;\n\t\t\tcase MotionEvent.ACTION_UP:\n\t\t\t\n\t\t\t \n\t\t\t\n\t\t\tbreak;\n\t\t} return true;\n\t}\n});","imports":"","name":"OnTouch"},{"code":"//Floating Window 2\nprivate WindowManager ###;\n\nprivate WindowManager.LayoutParams ###LP;\n\nprivate View ###V;\n\n\r\n%s","s":"true","imports":"","name":"Floating Window 2"},{"s":"true","code":"//AudioManager\n%s","imports":"","name":"AudioManager"},{"code":"//Instagram\n%s","s":"true","imports":"","name":"Instagram"},{"s":"true","code":"//Instagram//ArabWare\npublic void _###More (){\n%s\n}","imports":"","name":"Instagram//ArabWare"},{"s":"true","code":"//UndoRedo\n%s","imports":"","name":"UndoRedo"},{"code":"//BatteryProgress\n%s","s":"true","imports":"","name":"BatteryProgress"},{"code":"//ScrollChange\n###.setOnScrollChangeListener(new ScrollView.OnScrollChangeListener() {\n%s\n});","s":"true","imports":"","name":"ScrollChange"},{"code":"//ScrollChange2\n###.setOnScrollChangeListener(new ScrollView.OnScrollChangeListener() {\n%s\n});","s":"true","imports":"","name":"ScrollChange2"},{"code":"//TextColorAnimator\npublic class AnimatedGradientTextView extends TextView {\n    GradientManager gradientManager;\n    public String fonts;\n    public int[] colors;\n    public int simul;\n    public int angle;\n    public int speed;\n    public int maxFPS;\n    public AnimatedGradientTextView(Context context) {\n        super(context);\n        gradientManager \u003d new GradientManager(this);\n    }\n    public AnimatedGradientTextView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        gradientManager \u003d new GradientManager(this, colors, simul, angle, speed, maxFPS);\n        CustomFontManager.applyFontFromAttrs(this, fonts);\n    }\n    public AnimatedGradientTextView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n        gradientManager \u003d new GradientManager(this, colors, simul, angle, speed, maxFPS);\n        CustomFontManager.applyFontFromAttrs(this, fonts);\n    }\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        gradientManager.stopGradient();\n        gradientManager.startGradient();\n    }\n    @Override\n    protected void onVisibilityChanged(View changedView, int visibility) {\n        super.onVisibilityChanged(changedView, visibility);\n        if (visibility \u003d\u003d VISIBLE) {\n            if (getScaleX() !\u003d 0 \u0026\u0026 getScaleY() !\u003d 0) {\n                gradientManager.startGradient();\n            }\n        } else {\n            gradientManager.stopGradient();\n        }\n    }\n    @Override\n    protected void onWindowVisibilityChanged(int visibility) {\n        super.onWindowVisibilityChanged(visibility);\n        if (visibility \u003d\u003d VISIBLE) {\n            if (getScaleX() !\u003d 0 \u0026\u0026 getScaleY() !\u003d 0) {\n                gradientManager.startGradient();\n            }\n        } else {\n            gradientManager.stopGradient();\n        }\n    }\n    @Override\n    public void onScreenStateChanged(int screenState) {\n        super.onScreenStateChanged(screenState);\n        if (screenState \u003d\u003d SCREEN_STATE_OFF) {\n            gradientManager.stopGradient();\n        } else if (screenState \u003d\u003d SCREEN_STATE_ON) {\n            gradientManager.startGradient();\n        }\n    }\n    public void setFonts(String _font) {\n    \tfonts \u003d _font;\n    \tCustomFontManager.applyFontFromAttrs(this, _font);\n    }\n    public void setColorGradients(int[] _color) {\n    \tcolors \u003d _color;\n    \tgradientManager.setColors(_color);\n    }\n    public void setSimultaneousColors(int _sim) {\n    \tsimul \u003d _sim;\n    \tgradientManager.setSimultaneousColors(_sim);\n    }\n    public void setAngle(int _ang) {\n    \tangle \u003d _ang;\n    \tgradientManager.setAngle(_ang);\n    }\n    public void setSpeed(int _spd) {\n    \tspeed \u003d _spd;\n    \tgradientManager.setSpeed(_spd);\n    }\n    public void setMaxFPS(int _fps) {\n    \tmaxFPS \u003d _fps;\n    \tgradientManager.setMaxFPS(_fps);\n    }\n}\n\n\npublic static class CustomFontManager {\n    private static final String FONT_FILE_NAME \u003d \"fonts/\";\n    public static String fonts \u003d \"\";\n    private CustomFontManager() {\n\n    }\n    public static void applyFontFromAttrs(TextView textView, String _fonts) {\n        String fontName \u003d _fonts;\n        if(fontName !\u003d null) {\n            Typeface font \u003d Typeface.createFromAsset(textView.getContext().getAssets(), FONT_FILE_NAME + fontName);\n            textView.setTypeface(font);\n        }\n    }\n    public static void setFonts(String _font) {\n    \tfonts \u003d _font;\n    }\n}\n\n\npublic static class GradientManager {\n    private final TextView textView;\n    public static int[] colors \u003d new int[]{Color.BLUE, Color.RED, Color.GREEN};\n    public static int simultaneousColors \u003d 2;\n    public static int angle \u003d 45;\n    public static int speed \u003d 1000;\n    public static int maxFPS \u003d 24;\n    public static int drawTimeInterval;\n    private GradientRunnable runnable;\n    private java.util.concurrent.ScheduledFuture\u003c?\u003e scheduledFuture \u003d null;\n    private long currentGradientProgress \u003d 0;\n    private static final int ATTR_NOT_FOUND \u003d Integer.MIN_VALUE;\n    public GradientManager(TextView textView) {\n        this.textView \u003d textView;\n        this.initDefaultValues();\n    }\n    public GradientManager(TextView textView, int[] _colors, int _simul, int _angle, int _speed, int _maxFPS) {\n        this.textView \u003d textView;\n        this.initFromAttrsValues(_colors, _simul, _angle, _speed, _maxFPS);\n    }\n    @SuppressWarnings(\"ResourceType\")\n    private void initFromAttrsValues(int[] _colors, int _simul, int _angle, int _speed, int _maxFPS) {\n    \tcolors \u003d _colors;\n        simultaneousColors \u003d _simul;\n        angle \u003d _angle;\n        speed \u003d _speed;\n        maxFPS \u003d _maxFPS;\n        drawTimeInterval \u003d 1000 / maxFPS;\n    }\n    private void initDefaultValues() {\n        colors \u003d colors;\n        simultaneousColors \u003d simultaneousColors;\n        angle \u003d angle;\n        speed \u003d speed;\n        maxFPS \u003d maxFPS;\n        drawTimeInterval \u003d 1000 / maxFPS;\n    }\n    public void stopGradient() {\n        synchronized (this) {\n            if (scheduledFuture !\u003d null) {\n                currentGradientProgress \u003d runnable.getCurrentProgress();\n                scheduledFuture.cancel(true);\n                runnable \u003d null;\n                scheduledFuture \u003d null;\n            }\n        }\n    }\n    public void startGradient() {\n        synchronized (this) {\n            if (scheduledFuture !\u003d null) {\n                return;\n            }\n            final int wf \u003d textView.getWidth();\n            final int hf \u003d textView.getHeight();\n            if (wf \u003e 0 \u0026\u0026 hf \u003e 0) {\n                runnable \u003d new GradientRunnable(textView, colors, simultaneousColors, angle, speed);\n                runnable.setCurrentProgress(currentGradientProgress);\n                java.util.concurrent.ScheduledExecutorService scheduledExecutor \u003d java.util.concurrent.Executors.newSingleThreadScheduledExecutor();\n                scheduledFuture \u003d scheduledExecutor.scheduleAtFixedRate(runnable, 0, drawTimeInterval, java.util.concurrent.TimeUnit.MILLISECONDS);\n            }\n        }\n    }\n    public static void setColors(int[] _col) {\n    \tcolors \u003d _col;\n    }\n    public static void setSimultaneousColors(int _sim) {\n    \tsimultaneousColors \u003d _sim;\n    }\n    public static void setAngle(int _ang) {\n    \tangle \u003d _ang;\n    }\n    public static void setSpeed(int _spd) {\n    \tspeed \u003d _spd;\n    }\n    public static void setMaxFPS(int _fps) {\n    \tmaxFPS \u003d _fps;\n    }\n}\n\n\npublic static class GradientRunnable implements Runnable {\n    private final TextView textView;\n    private int[] colors;\n    private int angle;\n    private int speed;\n    private long totalDelta \u003d 0;\n    private long lastTime \u003d 0;\n    private int[] currentColors;\n    private Point[] gradientsPositions;\n    private int currentGradient \u003d 0;\n    GradientRunnable(TextView textView, int[] colors, int simultaneousColors, int angle, int speed) {\n        this.textView \u003d textView;\n        this.colors \u003d colors;\n        this.angle \u003d angle;\n        this.speed \u003d speed;\n        final int wf \u003d textView.getWidth();\n        final int hf \u003d textView.getHeight();\n        gradientsPositions \u003d getGradientsPoints(wf, hf);\n        currentColors \u003d Arrays.copyOf(colors, simultaneousColors);\n    }\n    @Override\n    public void run() {\n        long currentTime \u003d SystemClock.uptimeMillis();\n        long delta \u003d currentTime - lastTime;\n        totalDelta +\u003d delta;\n        float totalPercentage \u003d totalDelta / ((float) speed);\n        totalPercentage \u003d totalPercentage \u003e 1 ? 1 : totalPercentage;\n        for (int colorIndex \u003d 0; colorIndex \u003c currentColors.length; colorIndex++) {\n%s\n        }\n        Shader shader \u003d new LinearGradient(gradientsPositions[0].x, gradientsPositions[0].y, gradientsPositions[1].x, gradientsPositions[1].y, currentColors, null, Shader.TileMode.CLAMP);\n        textView.getPaint().setShader(shader);\n        textView.postInvalidate();\n        lastTime \u003d currentTime;\n    }\n    private Point[] getGradientsPoints(int width, int height) {\n        double angleRadian \u003d Math.toRadians(angle);\n        int circleRadius \u003d width;\n        Point circleCenter \u003d new Point(width / 2, height / 2);\n        Point secantP1 \u003d new Point((int) (circleCenter.x - circleRadius * Math.cos(angleRadian)), (int) (circleCenter.y - circleRadius * Math.sin(angleRadian)));\n        Point secantP2 \u003d new Point((int) (circleCenter.x + circleRadius * Math.cos(angleRadian)), (int) (circleCenter.y + circleRadius * Math.sin(angleRadian)));\n        Point[] intersectPoints \u003d new Point[2];\n        Point topSegmentP1 \u003d new Point(0, 0);\n        Point topSegmentP2 \u003d new Point(width, 0);\n        intersectPoints[0] \u003d MathsUtils.getIntersectionPoint(secantP1, secantP2, topSegmentP1, topSegmentP2);\n        if (intersectPoints[0] \u003d\u003d null) {\n            Point leftSegmentP1 \u003d new Point(0, 0);\n            Point leftSegmentP2 \u003d new Point(0, height);\n            intersectPoints[0] \u003d MathsUtils.getIntersectionPoint(secantP1, secantP2, leftSegmentP1, leftSegmentP2);\n        }\n        Point bottomSegmentP1 \u003d new Point(0, height);\n        Point bottomSegmentP2 \u003d new Point(width, height);\n        intersectPoints[1] \u003d MathsUtils.getIntersectionPoint(secantP1, secantP2, bottomSegmentP1, bottomSegmentP2);\n        if (intersectPoints[1] \u003d\u003d null) {\n            Point rightSegmentP1 \u003d new Point(width, 0);\n            Point rightSegmentP2 \u003d new Point(width, height);\n            intersectPoints[1] \u003d MathsUtils.getIntersectionPoint(secantP1, secantP2, rightSegmentP1, rightSegmentP2);\n        }\n        return intersectPoints;\n    }\n    public long getCurrentProgress() {\n        return totalDelta;\n    }\n    public void setCurrentProgress(long progress) {\n        this.totalDelta \u003d progress;\n    }\n}\n\n\npublic static class MathsUtils {\n    private MathsUtils() {\n    }\n    static Point getIntersectionPoint(Point p1, Point p2, Point p3, Point p4) {\n        int d \u003d (p1.x - p2.x) * (p3.y - p4.y) - (p1.y - p2.y) * (p3.x - p4.x);\n        if (d \u003d\u003d 0) return null;\n        int x \u003d ((p3.x - p4.x) * (p1.x * p2.y - p1.y * p2.x) - (p1.x - p2.x) * (p3.x * p4.y - p3.y * p4.x)) / d;\n        int y \u003d ((p3.y - p4.y) * (p1.x * p2.y - p1.y * p2.x) - (p1.y - p2.y) * (p3.x * p4.y - p3.y * p4.x)) / d;\n        return new Point(x, y);\n    }\n}","s":"true","imports":"","name":"TextColorAnimator"},{"code":"//GetWebCode\nprivate class ### extends AsyncTask\u003cString, Integer, String\u003e {\n\n@Override\n\nprotected void onPreExecute() {}\n\n\nprotected String doInBackground(String... address) {\n\nString ###o \u003d \"\";\n\ntry {\n\njava.net.URL ###url \u003d new java.net.URL(address[0]);\n\njava.io.BufferedReader ###i \u003d new java.io.BufferedReader(new java.io.InputStreamReader(###url.openStream()));\n\nString ###line;\n\nwhile ((###line \u003d ###i.readLine()) !\u003d null) {\n\n###o +\u003d ###line;\n\n}\n\n###i.close(); } catch (java.net.MalformedURLException e) {\n\n###o \u003d e.getMessage();\n\n} catch (java.io.IOException e) {\n\n###o \u003d e.getMessage();\n\n} catch (Exception e) {\n\n###o \u003d e.toString();\n\n}\n\nreturn ###o;\n\n}\n\n\nprotected void onProgressUpdate(Integer... values) {}\n\n\nprotected void onPostExecute(String _s){\n%s\n}\n}","s":"true","imports":"","name":"GetWebCode"},{"code":"//WordsCounter\npublic int CountWords(String str){\nif(str \u003d\u003d null || str.isEmpty())\nreturn 0;\nint count \u003d 0;\nfor(int e \u003d 0; e \u003c str.length(); e++){\nif(str.charAt(e) !\u003d \u0027 \u0027){\ncount++;\nwhile(str.charAt(e) !\u003d \u0027 \u0027 \u0026\u0026 e \u003c str.length()-1){\ne++;\n}\n}\n}\nreturn count; \n}","s":"true","imports":"","name":"WordsCounter"},{"s":"true","code":"//ScreenRecord\n###.setOnRecordListener(new RecordListener(){\n%s\n});\nif(_resultCode\u003d\u003dRESULT_OK){\n###.startRecord(_data,_resultCode);\n}else{\nToast.makeText(getApplicationContext(), \"Failed record check from permission\", Toast.LENGTH_LONG).show();\n}\nif(1\u003d\u003d2){\n}","imports":"","name":"ScreenRecord"},{"code":"%s","s":"false","imports":"com.google.firebase.messaging.FirebaseMessaging","name":"FcmNotification"},{"code":"//Check Root\n%s","s":"true","imports":"","name":"Check Root"},{"code":"###.addPurchaseListener(new PurchaseServiceListener() {\n%s\n});","s":"false","imports":"","name":"Google Play Billing Purchase"},{"code":"###.addSubscriptionListener(new SubscriptionServiceListener() {\n%s\n});","s":"false","imports":"","name":"Google Play Billing Subscription"},{"code":"%s","s":"false","imports":"","name":"BottomAppBar"},{"code":"%s","s":"false","imports":"","name":"SearchBar"},{"s":"true","code":"//ScreenRecord\n###.setOnRecordListener(new RecordListener(){\n%s\n});\nif(_resultCode\u003d\u003dRESULT_OK){\n###.startRecord(_data,_resultCode);\n}else{\nToast.makeText(getApplicationContext(), \"Failed record check from permission\", Toast.LENGTH_LONG).show();\n}\nif(1\u003d\u003d2){\n}","imports":"","name":"ScreenRecord"},{"code":"//WordsCounter\npublic int CountWords(String str){\nif(str \u003d\u003d null || str.isEmpty())\nreturn 0;\nint count \u003d 0;\nfor(int e \u003d 0; e \u003c str.length(); e++){\nif(str.charAt(e) !\u003d \u0027 \u0027){\ncount++;\nwhile(str.charAt(e) !\u003d \u0027 \u0027 \u0026\u0026 e \u003c str.length()-1){\ne++;\n}\n}\n}\nreturn count; \n}","s":"true","imports":"","name":"WordsCounter"},{"code":"//GetWebCode\nprivate class ### extends AsyncTask\u003cString, Integer, String\u003e {\n\n@Override\n\nprotected void onPreExecute() {}\n\n\nprotected String doInBackground(String... address) {\n\nString ###o \u003d \"\";\n\ntry {\n\njava.net.URL ###url \u003d new java.net.URL(address[0]);\n\njava.io.BufferedReader ###i \u003d new java.io.BufferedReader(new java.io.InputStreamReader(###url.openStream()));\n\nString ###line;\n\nwhile ((###line \u003d ###i.readLine()) !\u003d null) {\n\n###o +\u003d ###line;\n\n}\n\n###i.close(); } catch (java.net.MalformedURLException e) {\n\n###o \u003d e.getMessage();\n\n} catch (java.io.IOException e) {\n\n###o \u003d e.getMessage();\n\n} catch (Exception e) {\n\n###o \u003d e.toString();\n\n}\n\nreturn ###o;\n\n}\n\n\nprotected void onProgressUpdate(Integer... values) {}\n\n\nprotected void onPostExecute(String _s){\n%s\n}\n}","s":"true","imports":"","name":"GetWebCode"},{"code":"//TextColorAnimator\npublic class AnimatedGradientTextView extends TextView {\n    GradientManager gradientManager;\n    public String fonts;\n    public int[] colors;\n    public int simul;\n    public int angle;\n    public int speed;\n    public int maxFPS;\n    public AnimatedGradientTextView(Context context) {\n        super(context);\n        gradientManager \u003d new GradientManager(this);\n    }\n    public AnimatedGradientTextView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        gradientManager \u003d new GradientManager(this, colors, simul, angle, speed, maxFPS);\n        CustomFontManager.applyFontFromAttrs(this, fonts);\n    }\n    public AnimatedGradientTextView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n        gradientManager \u003d new GradientManager(this, colors, simul, angle, speed, maxFPS);\n        CustomFontManager.applyFontFromAttrs(this, fonts);\n    }\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        gradientManager.stopGradient();\n        gradientManager.startGradient();\n    }\n    @Override\n    protected void onVisibilityChanged(View changedView, int visibility) {\n        super.onVisibilityChanged(changedView, visibility);\n        if (visibility \u003d\u003d VISIBLE) {\n            if (getScaleX() !\u003d 0 \u0026\u0026 getScaleY() !\u003d 0) {\n                gradientManager.startGradient();\n            }\n        } else {\n            gradientManager.stopGradient();\n        }\n    }\n    @Override\n    protected void onWindowVisibilityChanged(int visibility) {\n        super.onWindowVisibilityChanged(visibility);\n        if (visibility \u003d\u003d VISIBLE) {\n            if (getScaleX() !\u003d 0 \u0026\u0026 getScaleY() !\u003d 0) {\n                gradientManager.startGradient();\n            }\n        } else {\n            gradientManager.stopGradient();\n        }\n    }\n    @Override\n    public void onScreenStateChanged(int screenState) {\n        super.onScreenStateChanged(screenState);\n        if (screenState \u003d\u003d SCREEN_STATE_OFF) {\n            gradientManager.stopGradient();\n        } else if (screenState \u003d\u003d SCREEN_STATE_ON) {\n            gradientManager.startGradient();\n        }\n    }\n    public void setFonts(String _font) {\n    \tfonts \u003d _font;\n    \tCustomFontManager.applyFontFromAttrs(this, _font);\n    }\n    public void setColorGradients(int[] _color) {\n    \tcolors \u003d _color;\n    \tgradientManager.setColors(_color);\n    }\n    public void setSimultaneousColors(int _sim) {\n    \tsimul \u003d _sim;\n    \tgradientManager.setSimultaneousColors(_sim);\n    }\n    public void setAngle(int _ang) {\n    \tangle \u003d _ang;\n    \tgradientManager.setAngle(_ang);\n    }\n    public void setSpeed(int _spd) {\n    \tspeed \u003d _spd;\n    \tgradientManager.setSpeed(_spd);\n    }\n    public void setMaxFPS(int _fps) {\n    \tmaxFPS \u003d _fps;\n    \tgradientManager.setMaxFPS(_fps);\n    }\n}\n\n\npublic static class CustomFontManager {\n    private static final String FONT_FILE_NAME \u003d \"fonts/\";\n    public static String fonts \u003d \"\";\n    private CustomFontManager() {\n\n    }\n    public static void applyFontFromAttrs(TextView textView, String _fonts) {\n        String fontName \u003d _fonts;\n        if(fontName !\u003d null) {\n            Typeface font \u003d Typeface.createFromAsset(textView.getContext().getAssets(), FONT_FILE_NAME + fontName);\n            textView.setTypeface(font);\n        }\n    }\n    public static void setFonts(String _font) {\n    \tfonts \u003d _font;\n    }\n}\n\n\npublic static class GradientManager {\n    private final TextView textView;\n    public static int[] colors \u003d new int[]{Color.BLUE, Color.RED, Color.GREEN};\n    public static int simultaneousColors \u003d 2;\n    public static int angle \u003d 45;\n    public static int speed \u003d 1000;\n    public static int maxFPS \u003d 24;\n    public static int drawTimeInterval;\n    private GradientRunnable runnable;\n    private java.util.concurrent.ScheduledFuture\u003c?\u003e scheduledFuture \u003d null;\n    private long currentGradientProgress \u003d 0;\n    private static final int ATTR_NOT_FOUND \u003d Integer.MIN_VALUE;\n    public GradientManager(TextView textView) {\n        this.textView \u003d textView;\n        this.initDefaultValues();\n    }\n    public GradientManager(TextView textView, int[] _colors, int _simul, int _angle, int _speed, int _maxFPS) {\n        this.textView \u003d textView;\n        this.initFromAttrsValues(_colors, _simul, _angle, _speed, _maxFPS);\n    }\n    @SuppressWarnings(\"ResourceType\")\n    private void initFromAttrsValues(int[] _colors, int _simul, int _angle, int _speed, int _maxFPS) {\n    \tcolors \u003d _colors;\n        simultaneousColors \u003d _simul;\n        angle \u003d _angle;\n        speed \u003d _speed;\n        maxFPS \u003d _maxFPS;\n        drawTimeInterval \u003d 1000 / maxFPS;\n    }\n    private void initDefaultValues() {\n        colors \u003d colors;\n        simultaneousColors \u003d simultaneousColors;\n        angle \u003d angle;\n        speed \u003d speed;\n        maxFPS \u003d maxFPS;\n        drawTimeInterval \u003d 1000 / maxFPS;\n    }\n    public void stopGradient() {\n        synchronized (this) {\n            if (scheduledFuture !\u003d null) {\n                currentGradientProgress \u003d runnable.getCurrentProgress();\n                scheduledFuture.cancel(true);\n                runnable \u003d null;\n                scheduledFuture \u003d null;\n            }\n        }\n    }\n    public void startGradient() {\n        synchronized (this) {\n            if (scheduledFuture !\u003d null) {\n                return;\n            }\n            final int wf \u003d textView.getWidth();\n            final int hf \u003d textView.getHeight();\n            if (wf \u003e 0 \u0026\u0026 hf \u003e 0) {\n                runnable \u003d new GradientRunnable(textView, colors, simultaneousColors, angle, speed);\n                runnable.setCurrentProgress(currentGradientProgress);\n                java.util.concurrent.ScheduledExecutorService scheduledExecutor \u003d java.util.concurrent.Executors.newSingleThreadScheduledExecutor();\n                scheduledFuture \u003d scheduledExecutor.scheduleAtFixedRate(runnable, 0, drawTimeInterval, java.util.concurrent.TimeUnit.MILLISECONDS);\n            }\n        }\n    }\n    public static void setColors(int[] _col) {\n    \tcolors \u003d _col;\n    }\n    public static void setSimultaneousColors(int _sim) {\n    \tsimultaneousColors \u003d _sim;\n    }\n    public static void setAngle(int _ang) {\n    \tangle \u003d _ang;\n    }\n    public static void setSpeed(int _spd) {\n    \tspeed \u003d _spd;\n    }\n    public static void setMaxFPS(int _fps) {\n    \tmaxFPS \u003d _fps;\n    }\n}\n\n\npublic static class GradientRunnable implements Runnable {\n    private final TextView textView;\n    private int[] colors;\n    private int angle;\n    private int speed;\n    private long totalDelta \u003d 0;\n    private long lastTime \u003d 0;\n    private int[] currentColors;\n    private Point[] gradientsPositions;\n    private int currentGradient \u003d 0;\n    GradientRunnable(TextView textView, int[] colors, int simultaneousColors, int angle, int speed) {\n        this.textView \u003d textView;\n        this.colors \u003d colors;\n        this.angle \u003d angle;\n        this.speed \u003d speed;\n        final int wf \u003d textView.getWidth();\n        final int hf \u003d textView.getHeight();\n        gradientsPositions \u003d getGradientsPoints(wf, hf);\n        currentColors \u003d Arrays.copyOf(colors, simultaneousColors);\n    }\n    @Override\n    public void run() {\n        long currentTime \u003d SystemClock.uptimeMillis();\n        long delta \u003d currentTime - lastTime;\n        totalDelta +\u003d delta;\n        float totalPercentage \u003d totalDelta / ((float) speed);\n        totalPercentage \u003d totalPercentage \u003e 1 ? 1 : totalPercentage;\n        for (int colorIndex \u003d 0; colorIndex \u003c currentColors.length; colorIndex++) {\n%s\n        }\n        Shader shader \u003d new LinearGradient(gradientsPositions[0].x, gradientsPositions[0].y, gradientsPositions[1].x, gradientsPositions[1].y, currentColors, null, Shader.TileMode.CLAMP);\n        textView.getPaint().setShader(shader);\n        textView.postInvalidate();\n        lastTime \u003d currentTime;\n    }\n    private Point[] getGradientsPoints(int width, int height) {\n        double angleRadian \u003d Math.toRadians(angle);\n        int circleRadius \u003d width;\n        Point circleCenter \u003d new Point(width / 2, height / 2);\n        Point secantP1 \u003d new Point((int) (circleCenter.x - circleRadius * Math.cos(angleRadian)), (int) (circleCenter.y - circleRadius * Math.sin(angleRadian)));\n        Point secantP2 \u003d new Point((int) (circleCenter.x + circleRadius * Math.cos(angleRadian)), (int) (circleCenter.y + circleRadius * Math.sin(angleRadian)));\n        Point[] intersectPoints \u003d new Point[2];\n        Point topSegmentP1 \u003d new Point(0, 0);\n        Point topSegmentP2 \u003d new Point(width, 0);\n        intersectPoints[0] \u003d MathsUtils.getIntersectionPoint(secantP1, secantP2, topSegmentP1, topSegmentP2);\n        if (intersectPoints[0] \u003d\u003d null) {\n            Point leftSegmentP1 \u003d new Point(0, 0);\n            Point leftSegmentP2 \u003d new Point(0, height);\n            intersectPoints[0] \u003d MathsUtils.getIntersectionPoint(secantP1, secantP2, leftSegmentP1, leftSegmentP2);\n        }\n        Point bottomSegmentP1 \u003d new Point(0, height);\n        Point bottomSegmentP2 \u003d new Point(width, height);\n        intersectPoints[1] \u003d MathsUtils.getIntersectionPoint(secantP1, secantP2, bottomSegmentP1, bottomSegmentP2);\n        if (intersectPoints[1] \u003d\u003d null) {\n            Point rightSegmentP1 \u003d new Point(width, 0);\n            Point rightSegmentP2 \u003d new Point(width, height);\n            intersectPoints[1] \u003d MathsUtils.getIntersectionPoint(secantP1, secantP2, rightSegmentP1, rightSegmentP2);\n        }\n        return intersectPoints;\n    }\n    public long getCurrentProgress() {\n        return totalDelta;\n    }\n    public void setCurrentProgress(long progress) {\n        this.totalDelta \u003d progress;\n    }\n}\n\n\npublic static class MathsUtils {\n    private MathsUtils() {\n    }\n    static Point getIntersectionPoint(Point p1, Point p2, Point p3, Point p4) {\n        int d \u003d (p1.x - p2.x) * (p3.y - p4.y) - (p1.y - p2.y) * (p3.x - p4.x);\n        if (d \u003d\u003d 0) return null;\n        int x \u003d ((p3.x - p4.x) * (p1.x * p2.y - p1.y * p2.x) - (p1.x - p2.x) * (p3.x * p4.y - p3.y * p4.x)) / d;\n        int y \u003d ((p3.y - p4.y) * (p1.x * p2.y - p1.y * p2.x) - (p1.y - p2.y) * (p3.x * p4.y - p3.y * p4.x)) / d;\n        return new Point(x, y);\n    }\n}","s":"true","imports":"","name":"TextColorAnimator"},{"code":"//ScrollChange2\n###.setOnScrollChangeListener(new ScrollView.OnScrollChangeListener() {\n%s\n});","s":"true","imports":"","name":"ScrollChange2"},{"code":"//ScrollChange\n###.setOnScrollChangeListener(new ScrollView.OnScrollChangeListener() {\n%s\n});","s":"true","imports":"","name":"ScrollChange"},{"code":"//BatteryProgress\n%s","s":"true","imports":"","name":"BatteryProgress"},{"s":"true","code":"//UndoRedo\n%s","imports":"","name":"UndoRedo"},{"s":"true","code":"//Instagram//ArabWare\npublic void _###More (){\n%s\n}","imports":"","name":"Instagram//ArabWare"},{"code":"//Instagram\n%s","s":"true","imports":"","name":"Instagram"},{"s":"true","code":"//AudioManager\n%s","imports":"","name":"AudioManager"},{"code":"//Floating Window 2\nprivate WindowManager ###;\n\nprivate WindowManager.LayoutParams ###LP;\n\nprivate View ###V;\n\n\r\n%s","s":"true","imports":"","name":"Floating Window 2"},{"s":"true","code":"//OnTouch\n###.setOnTouchListener(new View.OnTouchListener(){\n\t@Override\n\tpublic boolean onTouch(View v, MotionEvent event){\n\t\tint ev \u003d event.getAction();\n\t\tswitch (ev) {\n\t\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\t\n\t\t\t %s\n\t\t\t\n\t\t\tbreak;\n\t\t\tcase MotionEvent.ACTION_UP:\n\t\t\t\n\t\t\t \n\t\t\t\n\t\t\tbreak;\n\t\t} return true;\n\t}\n});","imports":"","name":"OnTouch"},{"s":"true","code":"//MoreBlockMaker\n%s","imports":"","name":"MoreBlockMaker"},{"code":"//Comments Maker\n%s","s":"true","imports":"","name":"Comments Maker"},{"s":"true","code":"//WindowProgress\npublic void _ArabWareComponent () {\n}\npublic static class WP7ProgressBar extends LinearLayout {\r\n    private static final int INTERVAL_DEF \u003d 150;\r\n    private static final int INDICATOR_COUNT_DEF \u003d 5;\r\n    private static final int ANIMATION_DURATION_DEF \u003d 2200;\r\n    private static final int INDICATOR_HEIGHT_DEF \u003d 5;\r\n    private static final int INDICATOR_RADIUS_DEF \u003d 0;\r\n    private int interval;\r\n    private int animationDuration;\r\n    private int indicatorHeight;\r\n    private int indicatorColor;\r\n    private int indicatorRadius;\r\n    private boolean isShowing \u003d false;\r\n    private ArrayList\u003cWP7Indicator\u003e WP7Indicators;\r\n    private Handler handler;\r\n    private int progressBarCount \u003d 0;\r\n    private ObjectAnimator objectAnimator;\r\n    public WP7ProgressBar(Context context) {\r\n        super(context);\r\n        initialize(null);\n}\n  public WP7ProgressBar(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n        initialize(attrs);\r\n    }\r\n    public WP7ProgressBar(Context context, AttributeSet attrs, int defStyleAttr) {\r\n        super(context, attrs, defStyleAttr);\r\n        initialize(attrs);\r\n    }\r\n    private void initialize(AttributeSet attrs) {\r\n        this.setGravity(Gravity.CENTER);\r\n        this.setOrientation(HORIZONTAL);\r\n        this.handler \u003d new Handler();\r\n        setAttributes(attrs);\r\n        initializeIndicators();\r\n    }\r\n    private void setAttributes(AttributeSet attributeSet) {\r\n        //TypedArray typedArray \u003d getContext().obtainStyledAttributes(attributeSet, R.styleable.WP7ProgressBar);\r\n        interval \u003d INTERVAL_DEF;\r\n        animationDuration \u003d ANIMATION_DURATION_DEF;\r\n        indicatorHeight \u003d INDICATOR_HEIGHT_DEF;\r\n        indicatorRadius \u003d INDICATOR_RADIUS_DEF;\r\n        indicatorColor \u003d Color.BLUE; //Context.getColor(getContext(), R.color.colorAccent);\r\n        //typedArray.recycle();\r\n    }\n%s\n    public void setInterval(int interval) {\r\n        this.interval \u003d interval;\r\n        initializeIndicators();\r\n    }\r\n    public void setAnimationDuration(int animationDuration) {\r\n        this.animationDuration \u003d animationDuration;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorHeight(int indicatorHeight) {\r\n        this.indicatorHeight \u003d indicatorHeight;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorColor(int indicatorColor) {\r\n        this.indicatorColor \u003d indicatorColor;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorRadius(int indicatorRadius) {\r\n        this.indicatorRadius \u003d indicatorRadius;\r\n        initializeIndicators();\r\n    }\r\n}\r\n\r\npublic static class WP10ProgressBar extends RelativeLayout {\r\n    private static final int INTERVAL_DEF \u003d 150;\r\n    private static final int INDICATOR_COUNT_DEF \u003d 5;\r\n    private static final int ANIMATION_DURATION_DEF \u003d 1800;\r\n    private static final int INDICATOR_HEIGHT_DEF \u003d 7;\r\n    private static final int INDICATOR_RADIUS_DEF \u003d 0;\r\n    private int interval;\r\n    private int animationDuration;\r\n    private int indicatorHeight;\r\n    private int indicatorColor;\r\n    private int indicatorRadius;\r\n    private boolean isShowing \u003d false;\r\n    private ArrayList\u003cWP10Indicator\u003e wp10Indicators;\r\n    private Handler handler;\r\n    private int progressBarCount \u003d 0;\r\n    public WP10ProgressBar(Context context) {\r\n        super(context);\r\n        initialize(null);\r\n    }\r\n    public WP10ProgressBar(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n        initialize(attrs);\r\n    }\r\n    public WP10ProgressBar(Context context, AttributeSet attrs, int defStyleAttr) {\r\n        super(context, attrs, defStyleAttr);\r\n        initialize(attrs);\r\n    }\r\n    private void initialize(AttributeSet attrs) {\r\n        this.setGravity(Gravity.CENTER);\r\n        this.handler \u003d new Handler();\r\n        this.setRotation(-25);\r\n        setAttributes(attrs);\r\n        initializeIndicators();\r\n    }\r\n    private void setAttributes(AttributeSet attributeSet) {\r\n        //TypedArray typedArray \u003d getContext().obtainStyledAttributes(attributeSet, R.styleable.WP10ProgressBar);\r\n        interval \u003d INTERVAL_DEF;\r\n        animationDuration \u003d ANIMATION_DURATION_DEF;\r\n        indicatorHeight \u003d INDICATOR_HEIGHT_DEF;\r\n        indicatorRadius \u003d INDICATOR_RADIUS_DEF;\r\n        indicatorColor \u003d Color.BLUE;\r\n    }\r\n    private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c wp10Indicators.size(); i++) {\r\n            wp10Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\r\n        }\r\n    }\r\n    private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP10Indicator\u003e WP10Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP10Indicator wp10Indicator \u003d new WP10Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius, i);\r\n            WP10Indicators.add(wp10Indicator);\r\n            this.addView(wp10Indicator);\r\n        }\r\n        this.wp10Indicators \u003d WP10Indicators;\r\n    }\r\n    private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\r\n    }\r\n    private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\r\n    }\r\n    private void clearIndicatorsAnimations() {\r\n        for (WP10Indicator wp10Indicator : wp10Indicators) {\r\n            wp10Indicator.removeAnim();\r\n        }\r\n    }\r\n    public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    WP10ProgressBar.this.show();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                    WP10ProgressBar.this.hide();\r\n                }\r\n            }\r\n        }, 50);\r\n    }\r\n    public void setInterval(int interval) {\r\n        this.interval \u003d interval;\r\n        initializeIndicators();\r\n    }\r\n    public void setAnimationDuration(int animationDuration) {\r\n        this.animationDuration \u003d animationDuration;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorHeight(int indicatorHeight) {\r\n        this.indicatorHeight \u003d indicatorHeight;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorColor(int indicatorColor) {\r\n        this.indicatorColor \u003d indicatorColor;\r\n        initializeIndicators();\r\n    }\r\n    public void setIndicatorRadius(int indicatorRadius) {\r\n        this.indicatorRadius \u003d indicatorRadius;\r\n        initializeIndicators();\r\n    }\r\n}\r\n\r\n\r\npublic static class Base10Indicator extends View {\r\n    private int color;\r\n    public Base10Indicator(Context context, int indicatorHeight, int color, int radius) {\r\n        super(context);\r\n        this.color \u003d color;\r\n        initialize(indicatorHeight, radius);\r\n    }\r\n    private void initialize(int indicatorHeight, int radius) {\r\n        this.setBackground(getCube(radius));\r\n        LinearLayout.LayoutParams layoutParams \u003d new LinearLayout.LayoutParams(Utils.px2dp(getContext(), indicatorHeight), Utils.px2dp(getContext(), indicatorHeight));\r\n        this.setLayoutParams(layoutParams);\r\n    }\r\n    private android.graphics.drawable.GradientDrawable getCube(int radius) {\r\n        android.graphics.drawable.GradientDrawable drawable \u003d new android.graphics.drawable.GradientDrawable();\r\n        drawable.setShape(android.graphics.drawable.GradientDrawable.RECTANGLE);\r\n        drawable.setColor(color);\r\n        drawable.setCornerRadius(Utils.px2dp(getContext(), radius));\r\n        return drawable;\r\n    }\r\n}\r\n\r\npublic static class Utils {\r\n    public static int px2dp(Context context, int px) {\r\n        float scale \u003d context.getResources().getDisplayMetrics().density;\r\n        return (int) (px * scale + 0.5f);\r\n    }\r\n}\r\n\r\nstatic class WP7Indicator extends View {\r\n    private ObjectAnimator objectAnimator;\r\n    private int color;\r\n    public WP7Indicator(Context context, int indicatorHeight, int color, int radius) {\r\n        super(context);\r\n        this.color \u003d color;\r\n        initialize(indicatorHeight, radius);\r\n    }\r\n    private void initialize(int indicatorHeight, int radius) {\r\n        this.setBackground(getCube(radius));\r\n        LinearLayout.LayoutParams layoutParams \u003d new LinearLayout.LayoutParams(Utils.px2dp(getContext(), indicatorHeight), Utils.px2dp(getContext(), indicatorHeight));\r\n        layoutParams.rightMargin \u003d Utils.px2dp(getContext(), (int) (1.5f * indicatorHeight));\r\n        this.setLayoutParams(layoutParams);\r\n        startAnim(0, 0);\r\n        removeAnim();\r\n    }\r\n    private android.graphics.drawable.GradientDrawable getCube(int radius) {\r\n        android.graphics.drawable.GradientDrawable drawable \u003d new android.graphics.drawable.GradientDrawable();\r\n        drawable.setShape(android.graphics.drawable.GradientDrawable.RECTANGLE);\r\n        drawable.setColor(color);\r\n        drawable.setCornerRadius(Utils.px2dp(getContext(), radius));\r\n        return drawable;\r\n    }\r\n    public void startAnim(long animationDuration, long delay) {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", +1000, -1000);\r\n        objectAnimator.setInterpolator(new WPInterpolator());\r\n        objectAnimator.setDuration(animationDuration);\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.setStartDelay(delay);\r\n        objectAnimator.start();\r\n    }\r\n    public void removeAnim() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\r\n    }\r\n}\r\n\r\npublic static class WP10Indicator extends RelativeLayout {\r\n    private Base10Indicator base10Indicator;\r\n    private ObjectAnimator objectAnimator;\r\n    private int number;\r\n    public WP10Indicator(Context context, int indicatorHeight, int color, int radius, int number) {\r\n        super(context);\r\n        initialize(indicatorHeight, color, radius, number);\r\n    }\r\n    private void initialize(int indicatorHeight, int color, int radius, int number) {\r\n        this.number \u003d number;\r\n        this.base10Indicator \u003d new Base10Indicator(getContext(), indicatorHeight, color, radius);\r\n        RelativeLayout.LayoutParams layoutParams \u003d new LayoutParams(Utils.px2dp(getContext(), indicatorHeight * 8),\r\n                Utils.px2dp(getContext(), indicatorHeight * 8));\r\n        this.setLayoutParams(layoutParams);\r\n        this.setGravity(Gravity.CENTER_VERTICAL | Gravity.RIGHT);\r\n        this.addView(base10Indicator);\r\n        startAnim(0, 0);\r\n        removeAnim();\r\n        this.setAlpha(0f);\r\n    }\r\n    public void startAnim(final long animationDuration, final long delay) {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"rotation\", (number * 15), -360 + (number * 15));\r\n        objectAnimator.setInterpolator(new WPInterpolator());\r\n        objectAnimator.setDuration(animationDuration);\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(2);\r\n        objectAnimator.addListener(new android.animation.Animator.AnimatorListener() {\r\n            @Override\r\n            public void onAnimationStart(android.animation.Animator animator) {\r\n                WP10Indicator.this.setAlpha(1f);\r\n                startAlphaAnimation(animationDuration);\r\n            }\r\n            @Override\r\n            public void onAnimationEnd(android.animation.Animator animator) {\r\n                removeAnim();\r\n                startAnim(animationDuration, 0);\r\n            }\r\n            @Override\r\n            public void onAnimationCancel(android.animation.Animator animator) {\r\n            }\r\n            @Override\r\n            public void onAnimationRepeat(android.animation.Animator animator) {\r\n            }\r\n        });\r\n        objectAnimator.setStartDelay(delay);\r\n        objectAnimator.start();\r\n    }\r\n    public void startAlphaAnimation(long animationDuration) {\r\n        this.animate().alpha(0).setDuration(animationDuration / 12).setStartDelay(2 * animationDuration);\r\n    }\r\n    public void removeAnim() {\r\n        this.animate().alpha(0f).setDuration(0).setStartDelay(0);\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\r\n    }\r\n}\r\n\r\npublic static class WPInterpolator implements android.view.animation.Interpolator {\r\n    @Override\r\n    public float getInterpolation(float v) {\r\n        if (v \u003e 0.3f \u0026\u0026 v \u003c 0.70f)\r\n            return (float) ((-(v - 0.5) / 6) + 0.5f);\r\n        return (float) ((-4) * Math.pow(v - 0.5, 3) + 0.5);\r\n    }\r\n}","imports":"","name":"WindowProgress"},{"code":"//ShareApp\n%s","s":"true","imports":"","name":"ShareApp"},{"s":"true","code":"//PdfReader\n%d","imports":"","name":"PdfReader"},{"code":"//Text Encryptor\n%s","s":"true","imports":"","name":"Text Encryptor"},{"code":"//SuperUser\n%s","s":"true","imports":"","name":"SuperUser"},{"code":"//SpeedDialView\n%s","s":"true","imports":"","name":"SpeedDialView"}]
[{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"@Override \npublic boolean onMenuItemSelected(int featureId, MenuItem item) {\nint itemId \u003d item.getItemId(); \nswitch (itemId) {\ncase android.R.id.home:\n%s\nbreak;\n}\nreturn true;\n}","headerSpec":"when home button of action bar clicked","var":"ActionBar","icon":"2131165565","name":"when clicked","listener":"ActionBar","description":"when clicked","parameters":""},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte[] b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte[] key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareChannel () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n%s\n} catch (Exception e ) {\n}\n}","headerSpec":"when device is rooted","var":"SuperUser","icon":"2131166350","name":"SuperUser","listener":"SuperUser","description":"check if device is rooted","parameters":""},{"code":"public void _ArabWareChannels () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n} catch (Exception e ) {\n%s\n}\n}","headerSpec":"when device not rooted","var":"SuperUser","icon":"2131166349","name":"Normal User","listener":"SuperUser","description":"use it to check if device not rooted","parameters":""},{"code":"public void _ArabWareYouTube () {\n}\nprivate\nandroid.graphics.pdf.PdfRenderer\nrenderer;\nZoomableImageView touch;\r\npublic class ZoomableImageView extends ImageView {\n\n\nMatrix matrix \u003d new Matrix();\n\nstatic final int NONE \u003d 0;\n\nstatic final int DRAG \u003d 1;\n\nstatic final int ZOOM \u003d 2;\n\nstatic final int CLICK \u003d 3;\n\nint mode \u003d NONE;\n\nPointF last \u003d new PointF();\n\nPointF start \u003d new PointF();\n\nfloat minScale \u003d 1f;\n\nfloat maxScale \u003d 4f;\n\nfloat[] m;\n\nfloat redundantXSpace, redundantYSpace;\n\nfloat width, height;\n\nfloat saveScale \u003d 1f;\n\nfloat right, bottom, origWidth, origHeight, bmWidth, bmHeight;\n\nScaleGestureDetector mScaleDetector;\n\nContext context;\n\n\npublic ZoomableImageView(Context context) {\n\nsuper(context);\n\nsuper.setClickable(true);\n\nthis.context \u003d context;\n\nmScaleDetector \u003d new ScaleGestureDetector(context, new ScaleListener());\n\nmatrix.setTranslate(1f, 1f);\n\nm \u003d new float[9];\n\nsetImageMatrix(matrix); setScaleType(ScaleType.MATRIX);\n\n\nsetOnTouchListener(new OnTouchListener() {\n\n@Override\n\npublic boolean onTouch(View v, MotionEvent event) {\n\nmScaleDetector.onTouchEvent(event);\n\nmatrix.getValues(m);\n\nfloat x \u003d m[Matrix.MTRANS_X];\n\nfloat y \u003d m[Matrix.MTRANS_Y];\n\nPointF curr \u003d new PointF(event.getX(), event.getY());\n\nswitch (event.getAction()) {\n\ncase MotionEvent.ACTION_DOWN: last.set(event.getX(), event.getY()); start.set(last); mode \u003d DRAG;\n\nbreak;\n\ncase MotionEvent.ACTION_POINTER_DOWN: last.set(event.getX(), event.getY()); start.set(last);\n\nmode \u003d ZOOM;\n\nbreak;\n\ncase MotionEvent.ACTION_MOVE:\n\nif (mode \u003d\u003d ZOOM || (mode \u003d\u003d DRAG \u0026\u0026 saveScale \u003e minScale)) {\n\nfloat deltaX \u003d curr.x - last.x;\n\nfloat deltaY \u003d curr.y - last.y;\n\nfloat scaleWidth \u003d Math.round(origWidth * saveScale);\n\nfloat scaleHeight \u003d Math.round(origHeight * saveScale);\n\nif (scaleWidth \u003c width) {\n\ndeltaX \u003d 0;\n\nif (y + deltaY \u003e 0) deltaY \u003d -y;\n\nelse if (y + deltaY \u003c -bottom) deltaY \u003d -(y + bottom);\n\n} else if (scaleHeight \u003c height) {\n\ndeltaY \u003d 0;\n\nif (x + deltaX \u003e 0) deltaX \u003d -x;\n\nelse if (x + deltaX \u003c -right) deltaX \u003d -(x + right);\n\n} else {\n\nif (x + deltaX \u003e 0) deltaX \u003d -x;\n\nelse if (x + deltaX \u003c -right) deltaX \u003d -(x + right);\n\nif (y + deltaY \u003e 0) deltaY \u003d -y;\n\nelse if (y + deltaY \u003c -bottom) deltaY \u003d -(y + bottom);\n\n}\n\nmatrix.postTranslate(deltaX, deltaY);\n\nlast.set(curr.x, curr.y);\n\n}\n\nbreak;\n\ncase MotionEvent.ACTION_UP:\n\nmode \u003d NONE;\n\nint xDiff \u003d (int) Math.abs(curr.x - start.x);\n\nint yDiff \u003d (int) Math.abs(curr.y - start.y);\n\nif (xDiff \u003c CLICK \u0026\u0026 yDiff \u003c CLICK) performClick();\n\nbreak;\n\ncase MotionEvent.ACTION_POINTER_UP:\n\nmode \u003d NONE;\n\nbreak;\n\n}\n\nsetImageMatrix(matrix);\n\ninvalidate();\n\nreturn true;\n\n}\n\n});\n\n}\n\n\n@Override\n\npublic void setImageBitmap(Bitmap bm) {\n\nsuper.setImageBitmap(bm);\n\nbmWidth \u003d bm.getWidth();\n\nbmHeight \u003d bm.getHeight(); }\n\n\npublic void setMaxZoom(float x) {\n\nmaxScale \u003d x; }\n\n\nprivate class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {\n\n@Override\n\npublic boolean onScaleBegin(ScaleGestureDetector detector) {\n\nmode \u003d ZOOM;\n\nreturn true;}\n\n@Override\n\npublic boolean onScale(ScaleGestureDetector detector) {\n\nfloat mScaleFactor \u003d detector.getScaleFactor();\n\nfloat origScale \u003d saveScale;\n\nsaveScale *\u003d mScaleFactor;\n\nif (saveScale \u003e maxScale){\n\nsaveScale \u003d maxScale;\n\nmScaleFactor \u003d maxScale / origScale;\n\n} else if (saveScale \u003c minScale) {\n\nsaveScale \u003d minScale;\n\nmScaleFactor \u003d minScale / origScale;}\n\nright \u003d width * saveScale - width - (2 * redundantXSpace * saveScale);\n\nbottom \u003d height * saveScale - height - (2 * redundantYSpace * saveScale);\n\nif (origWidth * saveScale \u003c\u003d width || origHeight * saveScale \u003c\u003d height) {\n\nmatrix.postScale(mScaleFactor, mScaleFactor, width / 2, height / 2);\n\nif (mScaleFactor \u003c 1) {\n\nmatrix.getValues(m);\n\nfloat x \u003d m[Matrix.MTRANS_X];\n\nfloat y \u003d m[Matrix.MTRANS_Y];\n\nif (mScaleFactor \u003c 1) {\n\nif (Math.round(origWidth * saveScale) \u003c width) {\n\nif (y \u003c -bottom) matrix.postTranslate(0, -(y + bottom));\n\nelse if (y \u003e 0) matrix.postTranslate(0, -y);\n\n} else {\n\nif (x \u003c -right) matrix.postTranslate(-(x + right), 0);\n\nelse if (x \u003e 0) matrix.postTranslate(-x, 0);}\n\n}\n\n}\n\n} else {\n\nmatrix.postScale(mScaleFactor, mScaleFactor, detector.getFocusX(), detector.getFocusY()); matrix.getValues(m);\n\nfloat x \u003d m[Matrix.MTRANS_X];\n\nfloat y \u003d m[Matrix.MTRANS_Y];\n\nif (mScaleFactor \u003c 1) {\n\nif (x \u003c -right) matrix.postTranslate(-(x + right), 0);\n\nelse if (x \u003e 0) matrix.postTranslate(-x, 0);\n\nif (y \u003c -bottom) matrix.postTranslate(0, -(y + bottom));\n\nelse if (y \u003e 0) matrix.postTranslate(0, -y);}\n\n}\n\nreturn true;\n\n}\n\n}\n\n\n@Override\n\nprotected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {\n\nsuper.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\nwidth \u003d MeasureSpec.getSize(widthMeasureSpec);\n\nheight \u003d MeasureSpec.getSize(heightMeasureSpec);\n\nfloat scale;\n\nfloat scaleX \u003d width / bmWidth;\n\nfloat scaleY \u003d height / bmHeight;\n\nscale \u003d Math.min(scaleX, scaleY); matrix.setScale(scale, scale); setImageMatrix(matrix);\n\nsaveScale \u003d 1f;\n\nredundantYSpace \u003d height - (scale * bmHeight) ;\n\nredundantXSpace \u003d width - (scale * bmWidth);\n\nredundantYSpace /\u003d 2;\n\nredundantXSpace /\u003d 2; matrix.postTranslate(redundantXSpace, redundantYSpace);\n\norigWidth \u003d width - 2 * redundantXSpace;\n\norigHeight \u003d height - 2 * redundantYSpace;\n\nright \u003d width * saveScale - width - (2 * redundantXSpace * saveScale);\n\nbottom \u003d height * saveScale - height - (2 * redundantYSpace * saveScale); setImageMatrix(matrix);}\n\n}\n\n    \r\n{\n}","headerSpec":"don\u0027t put any thing here","var":"PdfReader","icon":"2131165505","name":"enable it","listener":"PdfReader","description":"enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void showFloatingWindow() {\n\n%s\n\n}","headerSpec":"### On Show Floating Window","var":"FloatWindowFix","icon":"2131165554","name":"OnShowFloatingWindow","listener":"Floating Window 2","description":"OnShow","parameters":""},{"code":"private class FloatingOnTouchListener implements View.OnTouchListener {\n\nprivate int x;\n\nprivate int y;\n\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\t\n\t\n\tswitch (event.getAction()) {\n\t\t\n\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\n\t\tx \u003d (int) event.getRawX();\n\t\t\n\t\ty \u003d (int) event.getRawY();\n\t\t\n\t\tbreak;\n\t\t\n\t\t\n\t\tcase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX();\n\t\t\n\t\tint nowY \u003d (int) event.getRawY();\n\t\t\n\t\tint movedX \u003d nowX - x;\n\t\t\n\t\tint movedY \u003d nowY - y;\n\t\t\n\t\tx \u003d nowX; y \u003d nowY;\n\n      %s\n\t\t\n\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\n\t\tbreak;\n\t\t\n\t}\n\t\n\treturn true;\n\t\n}\n\n}","headerSpec":"### On Touched","var":"FloatWindowFix","icon":"2131165565","name":"OnTouchedListener","listener":"Floating Window 2","description":"OnTouch","parameters":""},{"code":"public void closes(){\n\ntry{\n\t%s\n\t\n}\n\ncatch(Exception e){\n\t\n}\n\n}","headerSpec":"### On Close","var":"FloatWindowFix","icon":"2131165455","name":"On Close","listener":"Floating Window 2","description":"OnClose","parameters":""},{"code":"%s","headerSpec":"On###Touched","var":"Clickable","icon":"2131165565","name":"OnTouched","listener":"OnTouch","description":"OnLinearLayoutTouched","parameters":"f"},{"code":"private void changed() {\n%s\n}","headerSpec":"on ### try to change volume","var":"AudioManager","icon":"2131165975","name":"OnChanged","listener":"AudioManager","description":"Just when You changed The Volume By your app\nthe event will happen","parameters":""},{"code":"public void _Connected () {\n%s\n}","headerSpec":"IF THE DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165593","name":"OnConnected","listener":"Instagram","description":"To Check If Device If Connected","parameters":""},{"code":"public void _NotConnected () {\n%s\n}","headerSpec":"IF DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165575","name":"OnNotConnected","listener":"Instagram","description":"To Check If Device Is Connected !","parameters":""},{"code":"%s","headerSpec":"### On Try to download","var":"InstagramDownloader","icon":"2131165538","name":"TryDownload","listener":"Instagram//ArabWare","description":"Start","parameters":""},{"code":"public class TextViewUndoRedo {\n\t\n\tprivate boolean mIsUndoOrRedo \u003d false;\n\tprivate EditHistory mEditHistory;\n\tprivate EditTextChangeListener mChangeListener;\n\tprivate TextView mTextView;\n\n\t\n\tpublic TextViewUndoRedo(TextView textView) {\n\t\tmTextView \u003d textView;\n\t\tmEditHistory \u003d new EditHistory();\n\t\tmChangeListener \u003d new EditTextChangeListener();\n\t\tmTextView.addTextChangedListener(mChangeListener);\n\t}\n\n\tpublic void disconnect() {\n\t\tmTextView.removeTextChangedListener(mChangeListener);\n\t}\n\n\tpublic void setMaxHistorySize(int maxHistorySize) {\n\t\tmEditHistory.setMaxHistorySize(maxHistorySize);\n\t}\n\n\tpublic void clearHistory() {\n\t\tmEditHistory.clear();\n\t}\n\n\t\n\tpublic boolean getCanUndo() {\n\t\treturn (mEditHistory.mmPosition \u003e 0);\n\t}\n\n\tpublic void undo() {\n\t\tEditItem edit \u003d mEditHistory.getPrevious();\n\t\tif (edit \u003d\u003d null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEditable text \u003d mTextView.getEditableText();\n\t\tint start \u003d edit.mmStart;\n\t\tint end \u003d start + (edit.mmAfter !\u003d null ? edit.mmAfter.length() : 0);\n\n\t\tmIsUndoOrRedo \u003d true;\n\t\ttext.replace(start, end, edit.mmBefore);\n\t\tmIsUndoOrRedo \u003d false;\n\n\t\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\n\t\t\ttext.removeSpan(o);\n\t\t}\n\n\t\tSelection.setSelection(text, edit.mmBefore \u003d\u003d null ? start\n\t\t\t\t: (start + edit.mmBefore.length()));\n\t}\n\n\tpublic boolean getCanRedo() {\n\t\treturn (mEditHistory.mmPosition \u003c mEditHistory.mmHistory.size());\n\t}\n\n\tpublic void redo() {\n\t\tEditItem edit \u003d mEditHistory.getNext();\n\t\tif (edit \u003d\u003d null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEditable text \u003d mTextView.getEditableText();\n\t\tint start \u003d edit.mmStart;\n\t\tint end \u003d start + (edit.mmBefore !\u003d null ? edit.mmBefore.length() : 0);\n\n\t\tmIsUndoOrRedo \u003d true;\n\t\ttext.replace(start, end, edit.mmAfter);\n\t\tmIsUndoOrRedo \u003d false;\n\n\t\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\n\t\t\ttext.removeSpan(o);\n\t\t}\n\n\t\tSelection.setSelection(text, edit.mmAfter \u003d\u003d null ? start\n\t\t\t\t: (start + edit.mmAfter.length()));\n\t}\n\n\tpublic void storePersistentState(android.content.SharedPreferences.Editor editor, String prefix) {\n\n\t\teditor.putString(prefix + \".hash\",\n\t\t\t\tString.valueOf(mTextView.getText().toString().hashCode()));\n\t\teditor.putInt(prefix + \".maxSize\", mEditHistory.mmMaxHistorySize);\n\t\teditor.putInt(prefix + \".position\", mEditHistory.mmPosition);\n\t\teditor.putInt(prefix + \".size\", mEditHistory.mmHistory.size());\n\n\t\tint i \u003d 0;\n\t\tfor (EditItem ei : mEditHistory.mmHistory) {\n\t\t\tString pre \u003d prefix + \".\" + i;\n\n\t\t\teditor.putInt(pre + \".start\", ei.mmStart);\n\t\t\teditor.putString(pre + \".before\", ei.mmBefore.toString());\n\t\t\teditor.putString(pre + \".after\", ei.mmAfter.toString());\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tpublic boolean restorePersistentState(SharedPreferences sp, String prefix)\n\t\t\tthrows IllegalStateException {\n\n\t\tboolean ok \u003d doRestorePersistentState(sp, prefix);\n\t\tif (!ok) {\n\t\t\tmEditHistory.clear();\n\t\t}\n\n\t\treturn ok;\n\t}\n\n\tprivate boolean doRestorePersistentState(SharedPreferences sp, String prefix) {\n\n\t\tString hash \u003d sp.getString(prefix + \".hash\", null);\n\t\tif (hash \u003d\u003d null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Integer.valueOf(hash) !\u003d mTextView.getText().toString().hashCode()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmEditHistory.clear();\n\t\tmEditHistory.mmMaxHistorySize \u003d sp.getInt(prefix + \".maxSize\", -1);\n\n\t\tint count \u003d sp.getInt(prefix + \".size\", -1);\n\t\tif (count \u003d\u003d -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (int i \u003d 0; i \u003c count; i++) {\n\t\t\tString pre \u003d prefix + \".\" + i;\n\n\t\t\tint start \u003d sp.getInt(pre + \".start\", -1);\n\t\t\tString before \u003d sp.getString(pre + \".before\", null);\n\t\t\tString after \u003d sp.getString(pre + \".after\", null);\n\n\t\t\tif (start \u003d\u003d -1 || before \u003d\u003d null || after \u003d\u003d null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tmEditHistory.add(new EditItem(start, before, after));\n\t\t}\n\n\t\tmEditHistory.mmPosition \u003d sp.getInt(prefix + \".position\", -1);\n\t\tif (mEditHistory.mmPosition \u003d\u003d -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate final class EditHistory {\n\n\t\tprivate int mmPosition \u003d 0;\n\t\tprivate int mmMaxHistorySize \u003d -1;\n\t\tprivate final LinkedList\u003cEditItem\u003e mmHistory \u003d new LinkedList\u003cEditItem\u003e();\n\t\tprivate void clear() {\n\t\t\tmmPosition \u003d 0;\n\t\t\tmmHistory.clear();\n\t\t}\n\n\t\tprivate void add(EditItem item) {\n\t\t\twhile (mmHistory.size() \u003e mmPosition) {\n\t\t\t\tmmHistory.removeLast();\n\t\t\t}\n\t\t\tmmHistory.add(item);\n\t\t\tmmPosition++;\n\n\t\t\tif (mmMaxHistorySize \u003e\u003d 0) {\n\t\t\t\ttrimHistory();\n\t\t\t}\n\t\t}\n\n\t\tprivate void setMaxHistorySize(int maxHistorySize) {\n\t\t\tmmMaxHistorySize \u003d maxHistorySize;\n\t\t\tif (mmMaxHistorySize \u003e\u003d 0) {\n\t\t\t\ttrimHistory();\n\t\t\t}\n\t\t}\n\n\t\tprivate void trimHistory() {\n\t\t\twhile (mmHistory.size() \u003e mmMaxHistorySize) {\n\t\t\t\tmmHistory.removeFirst();\n\t\t\t\tmmPosition--;\n\t\t\t}\n\n\t\t\tif (mmPosition \u003c 0) {\n\t\t\t\tmmPosition \u003d 0;\n\t\t\t}\n\t\t}\n\n\t\tprivate EditItem getPrevious() {\n\t\t\tif (mmPosition \u003d\u003d 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tmmPosition--;\n\t\t\treturn mmHistory.get(mmPosition);\n\t\t}\n\n\t\tprivate EditItem getNext() {\n\t\t\tif (mmPosition \u003e\u003d mmHistory.size()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tEditItem item \u003d mmHistory.get(mmPosition);\n\t\t\tmmPosition++;\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tprivate final class EditItem {\n\t\tprivate final int mmStart;\n\t\tprivate final CharSequence mmBefore;\n\t\tprivate final CharSequence mmAfter;\n\n\t\tpublic EditItem(int start, CharSequence before, CharSequence after) {\n\t\t\tmmStart \u003d start;\n\t\t\tmmBefore \u003d before;\n\t\t\tmmAfter \u003d after;\n\t\t}\n\t}\n\n\tprivate final class EditTextChangeListener implements TextWatcher {\n\n\t\tprivate CharSequence mBeforeChange;\n\t\tprivate CharSequence mAfterChange;\n\n\t\tpublic void beforeTextChanged(CharSequence s, int start, int count,\n\t\t\t\tint after) {\n\t\t\tif (mIsUndoOrRedo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmBeforeChange \u003d s.subSequence(start, start + count);\n\t\t}\n\n\t\tpublic void onTextChanged(CharSequence s, int start, int before,\n\t\t\t\tint count) {\n\t\t\tif (mIsUndoOrRedo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmAfterChange \u003d s.subSequence(start, start + count);\n\t\t\tmEditHistory.add(new EditItem(start, mBeforeChange, mAfterChange));\n\t\t}\n\n\t\tpublic void afterTextChanged(Editable s) {\n\t\t}\n\t}\n}","headerSpec":"don\u0027t put any blocks","var":"UndoRedo","icon":"2131165403","name":"Enable UndoRedo","listener":"UndoRedo","description":"Enable UndoRedo","parameters":""},{"code":"public static class BatteryProgressView extends View {\n    private int width,height;\n    private int x\u003d0,y\u003d0;\n    private Paint outerCirclePaint,innerCirclePaint,progressPaint,textPaint,percentagePaint,subTextPaint;\n    private int outerCircleColor\u003d0xFF00BDEB;\n    private int innerCircleColor\u003d0xFF00C0EB;\n    private int progressColor\u003d0xFFFFFFFF;\n    private int textColor\u003d0xFFFFFFFF;\n    private int OUTER_STROKE_WIDTH \u003d2;\n    private int INNER_STROKE_WIDTH \u003d8;\n    private static final int START_ANGLE\u003d270;\n    private int innerCircleMargin\u003d20;\n    private RectF progressBounds;\n    private int innerRadius,outerRadius;\n    private float progress\u003d0,maxProgress\u003d100,lastProgress\u003d0,progressUpdate;\n    private boolean isFirstTime\u003dtrue;\n    private ValueAnimator animator;\n    private static final String PERCENTAGE_TEXT\u003d\"%\";\n    private String progressText,subText;\n    private float textWidth;\n    public BatteryProgressView(Context context) {\n        super(context);\n        init(context,null);\n    }\n    public BatteryProgressView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init(context,attrs);\n    }\n    private void init(Context context, AttributeSet attrs) {\n        outerCirclePaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        outerCirclePaint.setStyle(Paint.Style.STROKE);\n        outerCirclePaint.setColor(outerCircleColor);\n        innerCirclePaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        innerCirclePaint.setStyle(Paint.Style.STROKE);\n        innerCirclePaint.setColor(innerCircleColor);\n        progressPaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        progressPaint.setStyle(Paint.Style.STROKE);\n        progressPaint.setColor(progressColor);\n        progressBounds\u003dnew RectF();\n        textPaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setColor(textColor);\n        percentagePaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        percentagePaint.setColor(textColor);\n        subTextPaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        subTextPaint.setColor(textColor);\n    }\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        outerCirclePaint.setStrokeWidth(OUTER_STROKE_WIDTH);\n        innerCirclePaint.setStrokeWidth(INNER_STROKE_WIDTH);\n        progressPaint.setStrokeWidth(INNER_STROKE_WIDTH);\n        textPaint.setTextSize(height/4);\n        percentagePaint.setTextSize(height/12);\n        subTextPaint.setTextSize(height/16);\n        textWidth\u003dtextPaint.measureText(progressText);\n        canvas.drawCircle(width/2,height/2,outerRadius,outerCirclePaint);\n        canvas.drawCircle(width/2,height/2,innerRadius,innerCirclePaint);\n        canvas.drawArc(progressBounds,START_ANGLE,progressUpdate,false,progressPaint);\n        canvas.drawText(progressText,0,progressText.length(),(width/2)-(textWidth/2),height/2,textPaint);\n        canvas.drawText(PERCENTAGE_TEXT,0,PERCENTAGE_TEXT.length(),(width/2)-(textWidth/2)+textWidth,height/2,percentagePaint);\n        textWidth\u003dsubTextPaint.measureText(subText);\n        canvas.drawText(subText,0,subText.length(),(width/2)-(textWidth/2),(height/2)+(textWidth/3),subTextPaint);\n    }\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int desiredWidth \u003d 300;\n        int desiredHeight \u003d 300;\n        int widthMode \u003d MeasureSpec.getMode(widthMeasureSpec);\n        int widthSize \u003d MeasureSpec.getSize(widthMeasureSpec);\n        int heightMode \u003d MeasureSpec.getMode(heightMeasureSpec);\n        int heightSize \u003d MeasureSpec.getSize(heightMeasureSpec);\n        int width;\n        int height;\n        if (widthMode \u003d\u003d MeasureSpec.EXACTLY) {\n            width \u003d widthSize;\n        } else if (widthMode \u003d\u003d MeasureSpec.AT_MOST) {\n            width \u003d Math.min(desiredWidth, widthSize);\n        } else {\n            width \u003d desiredWidth;\n        }\n        if (heightMode \u003d\u003d MeasureSpec.EXACTLY) {\n            height \u003d heightSize;\n        } else if (heightMode \u003d\u003d MeasureSpec.AT_MOST) {\n            height \u003d Math.min(desiredHeight, heightSize);\n        } else {\n            height \u003d desiredHeight;\n        }\n        setMeasuredDimension(width, height);\n    }\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        width\u003dw;\n        height\u003dh;\n        OUTER_STROKE_WIDTH\u003d(width/(width/5));\n        INNER_STROKE_WIDTH\u003d(width/(width/16));\n        outerRadius\u003d((width/2)- OUTER_STROKE_WIDTH);\n        innerRadius\u003d((width/2)- INNER_STROKE_WIDTH-innerCircleMargin);\n        progressText\u003d\"0\";\n        subText\u003d\"Remaining Battery\";\n        progressBounds.set(((width/2)- (innerRadius)),((height/2)- (innerRadius)),((width/2)- INNER_STROKE_WIDTH-innerCircleMargin)+(width/2),((height/2)- INNER_STROKE_WIDTH-innerCircleMargin)+(height/2));\n    }\n    public void setOuterCircleColor(int outerCircleColor) {\n        this.outerCircleColor \u003d outerCircleColor;\n    }\n    public void setInnerCircleMargin(int innerCircleMargin) {\n        this.innerCircleMargin \u003d innerCircleMargin;\n    }\n    public void setInnerCircleColor(int innerCircleColor) {\n        this.innerCircleColor \u003d innerCircleColor;\n    }\n    public void setProgressColor(int progressColor) {\n        this.progressColor \u003d progressColor;\n    }\n    public float getProgress() {\n        return progress;\n    }\n    public void setProgress(int progress) {\n        lastProgress\u003dthis.progress;\n        this.progress \u003d progress;\n        post(new Runnable() {\n            @Override\n            public void run() {\n                float incr\u003d360/maxProgress;\n                Log.e(\"pogress\",\"last:\"+lastProgress+\",progress:\"+BatteryProgressView.this.progress);\n                if(lastProgress\u003cBatteryProgressView.this.progress) {\n                    Log.e(\"first\",lastProgress+\" to \"+ (incr * (BatteryProgressView.this.progress))+\":\"+lastProgress);\n                    animator \u003d ValueAnimator.ofFloat(incr*lastProgress, incr * (BatteryProgressView.this.progress));\n                    animator.setDuration(800);\n                    animator.addUpdateListener(animatorUpdateListener);\n                    animator.setInterpolator(new DecelerateInterpolator());\n                    animator.start();\n                }else {\n                    Log.e(\"second\",lastProgress+\" to \"+ (incr * (BatteryProgressView.this.progress))+\":\"+lastProgress);\n                    animator \u003d ValueAnimator.ofFloat((incr*lastProgress), incr * (BatteryProgressView.this.progress));\n                    animator.setDuration(800);\n                    animator.addUpdateListener(animatorUpdateListener);\n                    animator.setInterpolator(new DecelerateInterpolator());\n                    animator.start();\n                }\n            }\n        });\n    }\n    public float getMaxProgress() {\n        return maxProgress;\n    }\n    public void setMaxProgress(int maxProgress) {\n        this.maxProgress \u003d maxProgress;\n    }\n    @Override\n    public void onWindowFocusChanged(boolean hasWindowFocus) {\n        super.onWindowFocusChanged(hasWindowFocus);\n    }\n    ValueAnimator.AnimatorUpdateListener animatorUpdateListener \u003d new ValueAnimator.AnimatorUpdateListener() {\n        @Override\n        public void onAnimationUpdate(ValueAnimator animation) {\n            float update \u003d (float) (animation.getAnimatedValue());\n            float incr\u003d360/maxProgress;\n            float value\u003d(update/incr);\n            progressUpdate\u003dupdate;\n            progressText\u003d((int)value)+\"\";\n            invalidate();\n        }\n    };\n    public void setTextColor(int textColor) {\n        this.textColor \u003d textColor;\n    }\n}","headerSpec":"don\u0027t put any blocks","var":"BatteryProgress","icon":"2131165403","name":"Enable BatteryProgress","listener":"BatteryProgress","description":"BatteryProgress","parameters":""},{"code":"@Override\npublic void onScrollChange(View v, int _scrollX, int _scrollY, int _oldScrollX, int _oldScrollY) {\n%s\n}","headerSpec":"### on scrolled %d.scrollX %d.scrollY %d.oldScrollX %d.oldScrollY","var":"HorizontalScrollView","icon":"2131165581","name":"OnScrollChange","listener":"ScrollChange","description":"Used to listen for scrolling Created By Rayan Mark","parameters":"%d %d %d %d"},{"code":"@Override\npublic void onScrollChange(View v, int _scrollX, int _scrollY, int _oldScrollX, int _oldScrollY) {\n%s\n}","headerSpec":"### on scrolled %d.scrollX %d.scrollY %d.oldScrollX %d.oldScrollY","var":"ScrollView","icon":"2131165581","name":"OnScrolled","listener":"ScrollChange2","description":"Used to listen for scrolling Created By Rayan Mark","parameters":"%d %d %d %d"},{"code":"%s","headerSpec":"### don\u0027t put any thing here","var":"TextColorAnimator","icon":"2131165505","name":"Enable","listener":"TextColorAnimator","description":"You must clicked this to Enable the component","parameters":""},{"code":"%s","headerSpec":"don\u0027t put any thing here","var":"WordsCounter","icon":"2131165312","name":"PublicInt","listener":"WordsCounter","description":"PublicInt","parameters":""},{"code":"@Override\npublic void onStart() {\n%s\n}","headerSpec":"### on start","var":"ScreenRecord","icon":"2131165589","name":"OnStart","listener":"ScreenRecord","description":"OnStart","parameters":""},{"code":"@Override\npublic void onStop() {\n%s\n}","headerSpec":"### on stop","var":"ScreenRecord","icon":"2131165590","name":"On Stop","listener":"ScreenRecord","description":"OnStop","parameters":""},{"code":"    public void onLowMemory() {\n        super.onLowMemory();\n        %s\n        }","headerSpec":"when device\u0027s memory is low then","var":"","icon":"2131165298","name":"OnLowMemory","listener":"","description":"to do something when device memory is low","parameters":""},{"code":"@Override \npublic void onConfigurationChanged(Configuration newConfig) \n{ \n   super.onConfigurationChanged(newConfig);\n%s\n }","headerSpec":"### onConfigurationChanged","var":"","icon":"2131165298","name":"onConfigurationChanged","listener":"","description":"onConfigurationChanged","parameters":""},{"code":"/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"extends AppCompatActivity {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nextends Service {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"protected void onCreate(Bundle _savedInstanceState) {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\npublic int onStartCommand(Intent _intent, int flags, int startId) {\r\n%1$s\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"super.onCreate(_savedInstanceState);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\n \nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"setContentView\"]\n\u003e0\n\u003e0\n\u003e0\n\u003ereplace\n \nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"private void initializeLogic() {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nprivate void initializeLogic(Intent intent) {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"initializeLogic();\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\ninitializeLogic(intent);\nreturn START_STICKY;\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"initialize(_savedInstanceState);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\ninitialize();\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"private void initialize(Bundle _savedInstanceState) {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nprivate void initialize() {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"runOnUiThread\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nnew Handler(Looper.getMainLooper()).post\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"extends Service {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003eadd\n @Override\n\tpublic IBinder onBind(Intent intent) {\n\t\t\t// This service is not designed to be bound, so we return null.\n\t\t\treturn null;\n\t}\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/","var":"","headerSpec":"onStartCommand","name":"activity2Service","listener":"","icon":"2131165298","description":"This event can convert your activity to service. Do not forget add xml code to your AndroidManifest","parameters":""},{"code":"/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"extends AppCompatActivity {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nextends BroadcastReceiver {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"protected void onCreate(Bundle _savedInstanceState) {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\npublic void onReceive(Context context, Intent intent) {\r\n%1$s\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"super.onCreate(_savedInstanceState);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\n\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"setContentView\"]\n\u003e0\n\u003e0\n\u003e0\n\u003ereplace\n\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"initialize(_savedInstanceState);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\ninitialize();\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"initializeLogic();\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\ninitializeLogic(context, intent);\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"private void initialize(Bundle _savedInstanceState) {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nprivate void initialize() {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"private void initializeLogic() {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nprivate void initializeLogic(Context _context, Intent _intent) {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"getApplicationContext()\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\n \nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/","var":"","headerSpec":"onReceive","name":"activity2Broadcast","listener":"","icon":"2131165298","description":"This event converts your activity to briadcast. Do not forget add xml code to your AndroidManifest","parameters":""},{"code":"%s","var":"MapView","headerSpec":"When ### camera moved %d.latitude %d.longitude","name":"onCameraMove","listener":"setOnCameraMoveListener","icon":"2131165540","description":"When ### camera moved","parameters":""},{"code":"%s","var":"MapView","headerSpec":"When ### camera idle %d.latitude %d.longitude","name":"onCameraIdle","listener":"setOnCameraIdleListener","icon":"2131165451","description":"When ### camera idle","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"@Override \npublic boolean onMenuItemSelected(int featureId, MenuItem item) {\nint itemId \u003d item.getItemId(); \nswitch (itemId) {\ncase android.R.id.home:\n%s\nbreak;\n}\nreturn true;\n}","headerSpec":"when home button of action bar clicked","var":"ActionBar","icon":"2131165565","name":"when clicked","listener":"ActionBar","description":"when clicked","parameters":""},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte[] b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte[] key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareYouTube () {\n}\nprivate\nandroid.graphics.pdf.PdfRenderer\nrenderer;\nZoomableImageView touch;\r\npublic class ZoomableImageView extends ImageView {\n\n\nMatrix matrix \u003d new Matrix();\n\nstatic final int NONE \u003d 0;\n\nstatic final int DRAG \u003d 1;\n\nstatic final int ZOOM \u003d 2;\n\nstatic final int CLICK \u003d 3;\n\nint mode \u003d NONE;\n\nPointF last \u003d new PointF();\n\nPointF start \u003d new PointF();\n\nfloat minScale \u003d 1f;\n\nfloat maxScale \u003d 4f;\n\nfloat[] m;\n\nfloat redundantXSpace, redundantYSpace;\n\nfloat width, height;\n\nfloat saveScale \u003d 1f;\n\nfloat right, bottom, origWidth, origHeight, bmWidth, bmHeight;\n\nScaleGestureDetector mScaleDetector;\n\nContext context;\n\n\npublic ZoomableImageView(Context context) {\n\nsuper(context);\n\nsuper.setClickable(true);\n\nthis.context \u003d context;\n\nmScaleDetector \u003d new ScaleGestureDetector(context, new ScaleListener());\n\nmatrix.setTranslate(1f, 1f);\n\nm \u003d new float[9];\n\nsetImageMatrix(matrix); setScaleType(ScaleType.MATRIX);\n\n\nsetOnTouchListener(new OnTouchListener() {\n\n@Override\n\npublic boolean onTouch(View v, MotionEvent event) {\n\nmScaleDetector.onTouchEvent(event);\n\nmatrix.getValues(m);\n\nfloat x \u003d m[Matrix.MTRANS_X];\n\nfloat y \u003d m[Matrix.MTRANS_Y];\n\nPointF curr \u003d new PointF(event.getX(), event.getY());\n\nswitch (event.getAction()) {\n\ncase MotionEvent.ACTION_DOWN: last.set(event.getX(), event.getY()); start.set(last); mode \u003d DRAG;\n\nbreak;\n\ncase MotionEvent.ACTION_POINTER_DOWN: last.set(event.getX(), event.getY()); start.set(last);\n\nmode \u003d ZOOM;\n\nbreak;\n\ncase MotionEvent.ACTION_MOVE:\n\nif (mode \u003d\u003d ZOOM || (mode \u003d\u003d DRAG \u0026\u0026 saveScale \u003e minScale)) {\n\nfloat deltaX \u003d curr.x - last.x;\n\nfloat deltaY \u003d curr.y - last.y;\n\nfloat scaleWidth \u003d Math.round(origWidth * saveScale);\n\nfloat scaleHeight \u003d Math.round(origHeight * saveScale);\n\nif (scaleWidth \u003c width) {\n\ndeltaX \u003d 0;\n\nif (y + deltaY \u003e 0) deltaY \u003d -y;\n\nelse if (y + deltaY \u003c -bottom) deltaY \u003d -(y + bottom);\n\n} else if (scaleHeight \u003c height) {\n\ndeltaY \u003d 0;\n\nif (x + deltaX \u003e 0) deltaX \u003d -x;\n\nelse if (x + deltaX \u003c -right) deltaX \u003d -(x + right);\n\n} else {\n\nif (x + deltaX \u003e 0) deltaX \u003d -x;\n\nelse if (x + deltaX \u003c -right) deltaX \u003d -(x + right);\n\nif (y + deltaY \u003e 0) deltaY \u003d -y;\n\nelse if (y + deltaY \u003c -bottom) deltaY \u003d -(y + bottom);\n\n}\n\nmatrix.postTranslate(deltaX, deltaY);\n\nlast.set(curr.x, curr.y);\n\n}\n\nbreak;\n\ncase MotionEvent.ACTION_UP:\n\nmode \u003d NONE;\n\nint xDiff \u003d (int) Math.abs(curr.x - start.x);\n\nint yDiff \u003d (int) Math.abs(curr.y - start.y);\n\nif (xDiff \u003c CLICK \u0026\u0026 yDiff \u003c CLICK) performClick();\n\nbreak;\n\ncase MotionEvent.ACTION_POINTER_UP:\n\nmode \u003d NONE;\n\nbreak;\n\n}\n\nsetImageMatrix(matrix);\n\ninvalidate();\n\nreturn true;\n\n}\n\n});\n\n}\n\n\n@Override\n\npublic void setImageBitmap(Bitmap bm) {\n\nsuper.setImageBitmap(bm);\n\nbmWidth \u003d bm.getWidth();\n\nbmHeight \u003d bm.getHeight(); }\n\n\npublic void setMaxZoom(float x) {\n\nmaxScale \u003d x; }\n\n\nprivate class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {\n\n@Override\n\npublic boolean onScaleBegin(ScaleGestureDetector detector) {\n\nmode \u003d ZOOM;\n\nreturn true;}\n\n@Override\n\npublic boolean onScale(ScaleGestureDetector detector) {\n\nfloat mScaleFactor \u003d detector.getScaleFactor();\n\nfloat origScale \u003d saveScale;\n\nsaveScale *\u003d mScaleFactor;\n\nif (saveScale \u003e maxScale){\n\nsaveScale \u003d maxScale;\n\nmScaleFactor \u003d maxScale / origScale;\n\n} else if (saveScale \u003c minScale) {\n\nsaveScale \u003d minScale;\n\nmScaleFactor \u003d minScale / origScale;}\n\nright \u003d width * saveScale - width - (2 * redundantXSpace * saveScale);\n\nbottom \u003d height * saveScale - height - (2 * redundantYSpace * saveScale);\n\nif (origWidth * saveScale \u003c\u003d width || origHeight * saveScale \u003c\u003d height) {\n\nmatrix.postScale(mScaleFactor, mScaleFactor, width / 2, height / 2);\n\nif (mScaleFactor \u003c 1) {\n\nmatrix.getValues(m);\n\nfloat x \u003d m[Matrix.MTRANS_X];\n\nfloat y \u003d m[Matrix.MTRANS_Y];\n\nif (mScaleFactor \u003c 1) {\n\nif (Math.round(origWidth * saveScale) \u003c width) {\n\nif (y \u003c -bottom) matrix.postTranslate(0, -(y + bottom));\n\nelse if (y \u003e 0) matrix.postTranslate(0, -y);\n\n} else {\n\nif (x \u003c -right) matrix.postTranslate(-(x + right), 0);\n\nelse if (x \u003e 0) matrix.postTranslate(-x, 0);}\n\n}\n\n}\n\n} else {\n\nmatrix.postScale(mScaleFactor, mScaleFactor, detector.getFocusX(), detector.getFocusY()); matrix.getValues(m);\n\nfloat x \u003d m[Matrix.MTRANS_X];\n\nfloat y \u003d m[Matrix.MTRANS_Y];\n\nif (mScaleFactor \u003c 1) {\n\nif (x \u003c -right) matrix.postTranslate(-(x + right), 0);\n\nelse if (x \u003e 0) matrix.postTranslate(-x, 0);\n\nif (y \u003c -bottom) matrix.postTranslate(0, -(y + bottom));\n\nelse if (y \u003e 0) matrix.postTranslate(0, -y);}\n\n}\n\nreturn true;\n\n}\n\n}\n\n\n@Override\n\nprotected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {\n\nsuper.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\nwidth \u003d MeasureSpec.getSize(widthMeasureSpec);\n\nheight \u003d MeasureSpec.getSize(heightMeasureSpec);\n\nfloat scale;\n\nfloat scaleX \u003d width / bmWidth;\n\nfloat scaleY \u003d height / bmHeight;\n\nscale \u003d Math.min(scaleX, scaleY); matrix.setScale(scale, scale); setImageMatrix(matrix);\n\nsaveScale \u003d 1f;\n\nredundantYSpace \u003d height - (scale * bmHeight) ;\n\nredundantXSpace \u003d width - (scale * bmWidth);\n\nredundantYSpace /\u003d 2;\n\nredundantXSpace /\u003d 2; matrix.postTranslate(redundantXSpace, redundantYSpace);\n\norigWidth \u003d width - 2 * redundantXSpace;\n\norigHeight \u003d height - 2 * redundantYSpace;\n\nright \u003d width * saveScale - width - (2 * redundantXSpace * saveScale);\n\nbottom \u003d height * saveScale - height - (2 * redundantYSpace * saveScale); setImageMatrix(matrix);}\n\n}\n\n    \r\n{\n}","headerSpec":"don\u0027t put any thing here","var":"PdfReader","icon":"2131165505","name":"enable it","listener":"PdfReader","description":"enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void showFloatingWindow() {\n\n%s\n\n}","headerSpec":"### On Show Floating Window","var":"FloatWindowFix","icon":"2131165554","name":"OnShowFloatingWindow","listener":"Floating Window 2","description":"OnShow","parameters":""},{"code":"private class FloatingOnTouchListener implements View.OnTouchListener {\n\nprivate int x;\n\nprivate int y;\n\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\t\n\t\n\tswitch (event.getAction()) {\n\t\t\n\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\n\t\tx \u003d (int) event.getRawX();\n\t\t\n\t\ty \u003d (int) event.getRawY();\n\t\t\n\t\tbreak;\n\t\t\n\t\t\n\t\tcase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX();\n\t\t\n\t\tint nowY \u003d (int) event.getRawY();\n\t\t\n\t\tint movedX \u003d nowX - x;\n\t\t\n\t\tint movedY \u003d nowY - y;\n\t\t\n\t\tx \u003d nowX; y \u003d nowY;\n\n      %s\n\t\t\n\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\n\t\tbreak;\n\t\t\n\t}\n\t\n\treturn true;\n\t\n}\n\n}","headerSpec":"### On Touched","var":"FloatWindowFix","icon":"2131165565","name":"OnTouchedListener","listener":"Floating Window 2","description":"OnTouch","parameters":""},{"code":"public void closes(){\n\ntry{\n\t%s\n\t\n}\n\ncatch(Exception e){\n\t\n}\n\n}","headerSpec":"### On Close","var":"FloatWindowFix","icon":"2131165455","name":"On Close","listener":"Floating Window 2","description":"OnClose","parameters":""},{"code":"%s","headerSpec":"On###Touched","var":"Clickable","icon":"2131165565","name":"OnTouched","listener":"OnTouch","description":"OnLinearLayoutTouched","parameters":""},{"code":"private void changed() {\n%s\n}","headerSpec":"on ### try to change volume","var":"AudioManager","icon":"2131165975","name":"OnChanged","listener":"AudioManager","description":"Just when You changed The Volume By your app\nthe event will happen","parameters":""},{"code":"public void _Connected () {\n%s\n}","headerSpec":"IF THE DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165593","name":"OnConnected","listener":"Instagram","description":"To Check If Device If Connected","parameters":""},{"code":"public void _NotConnected () {\n%s\n}","headerSpec":"IF DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165575","name":"OnNotConnected","listener":"Instagram","description":"To Check If Device Is Connected !","parameters":""},{"code":"%s","headerSpec":"### On Try to download","var":"InstagramDownloader","icon":"2131165538","name":"TryDownload","listener":"Instagram//ArabWare","description":"Start","parameters":""},{"code":"public class TextViewUndoRedo {\n\t\n\tprivate boolean mIsUndoOrRedo \u003d false;\n\tprivate EditHistory mEditHistory;\n\tprivate EditTextChangeListener mChangeListener;\n\tprivate TextView mTextView;\n\n\t\n\tpublic TextViewUndoRedo(TextView textView) {\n\t\tmTextView \u003d textView;\n\t\tmEditHistory \u003d new EditHistory();\n\t\tmChangeListener \u003d new EditTextChangeListener();\n\t\tmTextView.addTextChangedListener(mChangeListener);\n\t}\n\n\tpublic void disconnect() {\n\t\tmTextView.removeTextChangedListener(mChangeListener);\n\t}\n\n\tpublic void setMaxHistorySize(int maxHistorySize) {\n\t\tmEditHistory.setMaxHistorySize(maxHistorySize);\n\t}\n\n\tpublic void clearHistory() {\n\t\tmEditHistory.clear();\n\t}\n\n\t\n\tpublic boolean getCanUndo() {\n\t\treturn (mEditHistory.mmPosition \u003e 0);\n\t}\n\n\tpublic void undo() {\n\t\tEditItem edit \u003d mEditHistory.getPrevious();\n\t\tif (edit \u003d\u003d null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEditable text \u003d mTextView.getEditableText();\n\t\tint start \u003d edit.mmStart;\n\t\tint end \u003d start + (edit.mmAfter !\u003d null ? edit.mmAfter.length() : 0);\n\n\t\tmIsUndoOrRedo \u003d true;\n\t\ttext.replace(start, end, edit.mmBefore);\n\t\tmIsUndoOrRedo \u003d false;\n\n\t\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\n\t\t\ttext.removeSpan(o);\n\t\t}\n\n\t\tSelection.setSelection(text, edit.mmBefore \u003d\u003d null ? start\n\t\t\t\t: (start + edit.mmBefore.length()));\n\t}\n\n\tpublic boolean getCanRedo() {\n\t\treturn (mEditHistory.mmPosition \u003c mEditHistory.mmHistory.size());\n\t}\n\n\tpublic void redo() {\n\t\tEditItem edit \u003d mEditHistory.getNext();\n\t\tif (edit \u003d\u003d null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEditable text \u003d mTextView.getEditableText();\n\t\tint start \u003d edit.mmStart;\n\t\tint end \u003d start + (edit.mmBefore !\u003d null ? edit.mmBefore.length() : 0);\n\n\t\tmIsUndoOrRedo \u003d true;\n\t\ttext.replace(start, end, edit.mmAfter);\n\t\tmIsUndoOrRedo \u003d false;\n\n\t\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\n\t\t\ttext.removeSpan(o);\n\t\t}\n\n\t\tSelection.setSelection(text, edit.mmAfter \u003d\u003d null ? start\n\t\t\t\t: (start + edit.mmAfter.length()));\n\t}\n\n\tpublic void storePersistentState(android.content.SharedPreferences.Editor editor, String prefix) {\n\n\t\teditor.putString(prefix + \".hash\",\n\t\t\t\tString.valueOf(mTextView.getText().toString().hashCode()));\n\t\teditor.putInt(prefix + \".maxSize\", mEditHistory.mmMaxHistorySize);\n\t\teditor.putInt(prefix + \".position\", mEditHistory.mmPosition);\n\t\teditor.putInt(prefix + \".size\", mEditHistory.mmHistory.size());\n\n\t\tint i \u003d 0;\n\t\tfor (EditItem ei : mEditHistory.mmHistory) {\n\t\t\tString pre \u003d prefix + \".\" + i;\n\n\t\t\teditor.putInt(pre + \".start\", ei.mmStart);\n\t\t\teditor.putString(pre + \".before\", ei.mmBefore.toString());\n\t\t\teditor.putString(pre + \".after\", ei.mmAfter.toString());\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tpublic boolean restorePersistentState(SharedPreferences sp, String prefix)\n\t\t\tthrows IllegalStateException {\n\n\t\tboolean ok \u003d doRestorePersistentState(sp, prefix);\n\t\tif (!ok) {\n\t\t\tmEditHistory.clear();\n\t\t}\n\n\t\treturn ok;\n\t}\n\n\tprivate boolean doRestorePersistentState(SharedPreferences sp, String prefix) {\n\n\t\tString hash \u003d sp.getString(prefix + \".hash\", null);\n\t\tif (hash \u003d\u003d null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Integer.valueOf(hash) !\u003d mTextView.getText().toString().hashCode()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmEditHistory.clear();\n\t\tmEditHistory.mmMaxHistorySize \u003d sp.getInt(prefix + \".maxSize\", -1);\n\n\t\tint count \u003d sp.getInt(prefix + \".size\", -1);\n\t\tif (count \u003d\u003d -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (int i \u003d 0; i \u003c count; i++) {\n\t\t\tString pre \u003d prefix + \".\" + i;\n\n\t\t\tint start \u003d sp.getInt(pre + \".start\", -1);\n\t\t\tString before \u003d sp.getString(pre + \".before\", null);\n\t\t\tString after \u003d sp.getString(pre + \".after\", null);\n\n\t\t\tif (start \u003d\u003d -1 || before \u003d\u003d null || after \u003d\u003d null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tmEditHistory.add(new EditItem(start, before, after));\n\t\t}\n\n\t\tmEditHistory.mmPosition \u003d sp.getInt(prefix + \".position\", -1);\n\t\tif (mEditHistory.mmPosition \u003d\u003d -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate final class EditHistory {\n\n\t\tprivate int mmPosition \u003d 0;\n\t\tprivate int mmMaxHistorySize \u003d -1;\n\t\tprivate final LinkedList\u003cEditItem\u003e mmHistory \u003d new LinkedList\u003cEditItem\u003e();\n\t\tprivate void clear() {\n\t\t\tmmPosition \u003d 0;\n\t\t\tmmHistory.clear();\n\t\t}\n\n\t\tprivate void add(EditItem item) {\n\t\t\twhile (mmHistory.size() \u003e mmPosition) {\n\t\t\t\tmmHistory.removeLast();\n\t\t\t}\n\t\t\tmmHistory.add(item);\n\t\t\tmmPosition++;\n\n\t\t\tif (mmMaxHistorySize \u003e\u003d 0) {\n\t\t\t\ttrimHistory();\n\t\t\t}\n\t\t}\n\n\t\tprivate void setMaxHistorySize(int maxHistorySize) {\n\t\t\tmmMaxHistorySize \u003d maxHistorySize;\n\t\t\tif (mmMaxHistorySize \u003e\u003d 0) {\n\t\t\t\ttrimHistory();\n\t\t\t}\n\t\t}\n\n\t\tprivate void trimHistory() {\n\t\t\twhile (mmHistory.size() \u003e mmMaxHistorySize) {\n\t\t\t\tmmHistory.removeFirst();\n\t\t\t\tmmPosition--;\n\t\t\t}\n\n\t\t\tif (mmPosition \u003c 0) {\n\t\t\t\tmmPosition \u003d 0;\n\t\t\t}\n\t\t}\n\n\t\tprivate EditItem getPrevious() {\n\t\t\tif (mmPosition \u003d\u003d 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tmmPosition--;\n\t\t\treturn mmHistory.get(mmPosition);\n\t\t}\n\n\t\tprivate EditItem getNext() {\n\t\t\tif (mmPosition \u003e\u003d mmHistory.size()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tEditItem item \u003d mmHistory.get(mmPosition);\n\t\t\tmmPosition++;\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tprivate final class EditItem {\n\t\tprivate final int mmStart;\n\t\tprivate final CharSequence mmBefore;\n\t\tprivate final CharSequence mmAfter;\n\n\t\tpublic EditItem(int start, CharSequence before, CharSequence after) {\n\t\t\tmmStart \u003d start;\n\t\t\tmmBefore \u003d before;\n\t\t\tmmAfter \u003d after;\n\t\t}\n\t}\n\n\tprivate final class EditTextChangeListener implements TextWatcher {\n\n\t\tprivate CharSequence mBeforeChange;\n\t\tprivate CharSequence mAfterChange;\n\n\t\tpublic void beforeTextChanged(CharSequence s, int start, int count,\n\t\t\t\tint after) {\n\t\t\tif (mIsUndoOrRedo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmBeforeChange \u003d s.subSequence(start, start + count);\n\t\t}\n\n\t\tpublic void onTextChanged(CharSequence s, int start, int before,\n\t\t\t\tint count) {\n\t\t\tif (mIsUndoOrRedo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmAfterChange \u003d s.subSequence(start, start + count);\n\t\t\tmEditHistory.add(new EditItem(start, mBeforeChange, mAfterChange));\n\t\t}\n\n\t\tpublic void afterTextChanged(Editable s) {\n\t\t}\n\t}\n}","headerSpec":"don\u0027t put any blocks","var":"UndoRedo","icon":"2131165403","name":"Enable UndoRedo","listener":"UndoRedo","description":"Enable UndoRedo","parameters":""},{"code":"public static class BatteryProgressView extends View {\n    private int width,height;\n    private int x\u003d0,y\u003d0;\n    private Paint outerCirclePaint,innerCirclePaint,progressPaint,textPaint,percentagePaint,subTextPaint;\n    private int outerCircleColor\u003d0xFF00BDEB;\n    private int innerCircleColor\u003d0xFF00C0EB;\n    private int progressColor\u003d0xFFFFFFFF;\n    private int textColor\u003d0xFFFFFFFF;\n    private int OUTER_STROKE_WIDTH \u003d2;\n    private int INNER_STROKE_WIDTH \u003d8;\n    private static final int START_ANGLE\u003d270;\n    private int innerCircleMargin\u003d20;\n    private RectF progressBounds;\n    private int innerRadius,outerRadius;\n    private float progress\u003d0,maxProgress\u003d100,lastProgress\u003d0,progressUpdate;\n    private boolean isFirstTime\u003dtrue;\n    private ValueAnimator animator;\n    private static final String PERCENTAGE_TEXT\u003d\"%\";\n    private String progressText,subText;\n    private float textWidth;\n    public BatteryProgressView(Context context) {\n        super(context);\n        init(context,null);\n    }\n    public BatteryProgressView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init(context,attrs);\n    }\n    private void init(Context context, AttributeSet attrs) {\n        outerCirclePaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        outerCirclePaint.setStyle(Paint.Style.STROKE);\n        outerCirclePaint.setColor(outerCircleColor);\n        innerCirclePaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        innerCirclePaint.setStyle(Paint.Style.STROKE);\n        innerCirclePaint.setColor(innerCircleColor);\n        progressPaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        progressPaint.setStyle(Paint.Style.STROKE);\n        progressPaint.setColor(progressColor);\n        progressBounds\u003dnew RectF();\n        textPaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setColor(textColor);\n        percentagePaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        percentagePaint.setColor(textColor);\n        subTextPaint\u003dnew Paint(Paint.ANTI_ALIAS_FLAG);\n        subTextPaint.setColor(textColor);\n    }\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        outerCirclePaint.setStrokeWidth(OUTER_STROKE_WIDTH);\n        innerCirclePaint.setStrokeWidth(INNER_STROKE_WIDTH);\n        progressPaint.setStrokeWidth(INNER_STROKE_WIDTH);\n        textPaint.setTextSize(height/4);\n        percentagePaint.setTextSize(height/12);\n        subTextPaint.setTextSize(height/16);\n        textWidth\u003dtextPaint.measureText(progressText);\n        canvas.drawCircle(width/2,height/2,outerRadius,outerCirclePaint);\n        canvas.drawCircle(width/2,height/2,innerRadius,innerCirclePaint);\n        canvas.drawArc(progressBounds,START_ANGLE,progressUpdate,false,progressPaint);\n        canvas.drawText(progressText,0,progressText.length(),(width/2)-(textWidth/2),height/2,textPaint);\n        canvas.drawText(PERCENTAGE_TEXT,0,PERCENTAGE_TEXT.length(),(width/2)-(textWidth/2)+textWidth,height/2,percentagePaint);\n        textWidth\u003dsubTextPaint.measureText(subText);\n        canvas.drawText(subText,0,subText.length(),(width/2)-(textWidth/2),(height/2)+(textWidth/3),subTextPaint);\n    }\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int desiredWidth \u003d 300;\n        int desiredHeight \u003d 300;\n        int widthMode \u003d MeasureSpec.getMode(widthMeasureSpec);\n        int widthSize \u003d MeasureSpec.getSize(widthMeasureSpec);\n        int heightMode \u003d MeasureSpec.getMode(heightMeasureSpec);\n        int heightSize \u003d MeasureSpec.getSize(heightMeasureSpec);\n        int width;\n        int height;\n        if (widthMode \u003d\u003d MeasureSpec.EXACTLY) {\n            width \u003d widthSize;\n        } else if (widthMode \u003d\u003d MeasureSpec.AT_MOST) {\n            width \u003d Math.min(desiredWidth, widthSize);\n        } else {\n            width \u003d desiredWidth;\n        }\n        if (heightMode \u003d\u003d MeasureSpec.EXACTLY) {\n            height \u003d heightSize;\n        } else if (heightMode \u003d\u003d MeasureSpec.AT_MOST) {\n            height \u003d Math.min(desiredHeight, heightSize);\n        } else {\n            height \u003d desiredHeight;\n        }\n        setMeasuredDimension(width, height);\n    }\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        width\u003dw;\n        height\u003dh;\n        OUTER_STROKE_WIDTH\u003d(width/(width/5));\n        INNER_STROKE_WIDTH\u003d(width/(width/16));\n        outerRadius\u003d((width/2)- OUTER_STROKE_WIDTH);\n        innerRadius\u003d((width/2)- INNER_STROKE_WIDTH-innerCircleMargin);\n        progressText\u003d\"0\";\n        subText\u003d\"Remaining Battery\";\n        progressBounds.set(((width/2)- (innerRadius)),((height/2)- (innerRadius)),((width/2)- INNER_STROKE_WIDTH-innerCircleMargin)+(width/2),((height/2)- INNER_STROKE_WIDTH-innerCircleMargin)+(height/2));\n    }\n    public void setOuterCircleColor(int outerCircleColor) {\n        this.outerCircleColor \u003d outerCircleColor;\n    }\n    public void setInnerCircleMargin(int innerCircleMargin) {\n        this.innerCircleMargin \u003d innerCircleMargin;\n    }\n    public void setInnerCircleColor(int innerCircleColor) {\n        this.innerCircleColor \u003d innerCircleColor;\n    }\n    public void setProgressColor(int progressColor) {\n        this.progressColor \u003d progressColor;\n    }\n    public float getProgress() {\n        return progress;\n    }\n    public void setProgress(int progress) {\n        lastProgress\u003dthis.progress;\n        this.progress \u003d progress;\n        post(new Runnable() {\n            @Override\n            public void run() {\n                float incr\u003d360/maxProgress;\n                Log.e(\"pogress\",\"last:\"+lastProgress+\",progress:\"+BatteryProgressView.this.progress);\n                if(lastProgress\u003cBatteryProgressView.this.progress) {\n                    Log.e(\"first\",lastProgress+\" to \"+ (incr * (BatteryProgressView.this.progress))+\":\"+lastProgress);\n                    animator \u003d ValueAnimator.ofFloat(incr*lastProgress, incr * (BatteryProgressView.this.progress));\n                    animator.setDuration(800);\n                    animator.addUpdateListener(animatorUpdateListener);\n                    animator.setInterpolator(new DecelerateInterpolator());\n                    animator.start();\n                }else {\n                    Log.e(\"second\",lastProgress+\" to \"+ (incr * (BatteryProgressView.this.progress))+\":\"+lastProgress);\n                    animator \u003d ValueAnimator.ofFloat((incr*lastProgress), incr * (BatteryProgressView.this.progress));\n                    animator.setDuration(800);\n                    animator.addUpdateListener(animatorUpdateListener);\n                    animator.setInterpolator(new DecelerateInterpolator());\n                    animator.start();\n                }\n            }\n        });\n    }\n    public float getMaxProgress() {\n        return maxProgress;\n    }\n    public void setMaxProgress(int maxProgress) {\n        this.maxProgress \u003d maxProgress;\n    }\n    @Override\n    public void onWindowFocusChanged(boolean hasWindowFocus) {\n        super.onWindowFocusChanged(hasWindowFocus);\n    }\n    ValueAnimator.AnimatorUpdateListener animatorUpdateListener \u003d new ValueAnimator.AnimatorUpdateListener() {\n        @Override\n        public void onAnimationUpdate(ValueAnimator animation) {\n            float update \u003d (float) (animation.getAnimatedValue());\n            float incr\u003d360/maxProgress;\n            float value\u003d(update/incr);\n            progressUpdate\u003dupdate;\n            progressText\u003d((int)value)+\"\";\n            invalidate();\n        }\n    };\n    public void setTextColor(int textColor) {\n        this.textColor \u003d textColor;\n    }\n}","headerSpec":"don\u0027t put any blocks","var":"BatteryProgress","icon":"2131165403","name":"Enable BatteryProgress","listener":"BatteryProgress","description":"BatteryProgress","parameters":""},{"code":"@Override\npublic void onScrollChange(View v, int _scrollX, int _scrollY, int _oldScrollX, int _oldScrollY) {\n%s\n}","headerSpec":"### on scrolled %d.scrollX %d.scrollY %d.oldScrollX %d.oldScrollY","var":"HorizontalScrollView","icon":"2131165581","name":"OnScrollChange","listener":"ScrollChange","description":"Used to listen for scrolling Created By Rayan Mark","parameters":"%d %d %d %d"},{"code":"@Override\npublic void onScrollChange(View v, int _scrollX, int _scrollY, int _oldScrollX, int _oldScrollY) {\n%s\n}","headerSpec":"### on scrolled %d.scrollX %d.scrollY %d.oldScrollX %d.oldScrollY","var":"ScrollView","icon":"2131165581","name":"OnScrolled","listener":"ScrollChange2","description":"Used to listen for scrolling Created By Rayan Mark","parameters":"%d %d %d %d"},{"code":"%s","headerSpec":"### don\u0027t put any thing here","var":"TextColorAnimator","icon":"2131165505","name":"Enable","listener":"TextColorAnimator","description":"You must clicked this to Enable the component","parameters":""},{"code":"%s","headerSpec":"don\u0027t put any thing here","var":"WordsCounter","icon":"2131165312","name":"PublicInt","listener":"WordsCounter","description":"PublicInt","parameters":""},{"code":"@Override\npublic void onStart() {\n%s\n}","headerSpec":"### on start","var":"ScreenRecord","icon":"2131165589","name":"OnStart","listener":"ScreenRecord","description":"OnStart","parameters":""},{"code":"@Override\npublic void onStop() {\n%s\n}","headerSpec":"### on stop","var":"ScreenRecord","icon":"2131165590","name":"On Stop","listener":"ScreenRecord","description":"OnStop","parameters":""},{"code":"FirebaseMessaging.getInstance().getToken().addOnCompleteListener(new OnCompleteListener\u003cString\u003e() {\n                @Override\n                public void onComplete(@NonNull Task\u003cString\u003e task) {\n                    if(task.isComplete()){\n                      String _token \u003d task.getResult();\n\n%s\n\n                    }}});","var":"FcmNotification","headerSpec":"When ### CompleteRegister %s.token","name":"WhenCompleteRegister","listener":"FcmNotification","icon":"2131166332","description":"FcmNotification","parameters":"%s"},{"code":"    public void onLowMemory() {\n        super.onLowMemory();\n        %s\n        }","headerSpec":"when device\u0027s memory is low then","var":"","icon":"2131165298","name":"OnLowMemory","listener":"","description":"to do something when device memory is low","parameters":""},{"code":"@Override \npublic void onConfigurationChanged(Configuration newConfig) \n{ \n   super.onConfigurationChanged(newConfig);\n%s\n }","headerSpec":"### onConfigurationChanged","var":"","icon":"2131165298","name":"onConfigurationChanged","listener":"","description":"onConfigurationChanged","parameters":""},{"code":"@Override\r\n\tpublic void onRequestPermissionsResult(int _requestCode, String[] _permissions, int[] _grantResults) {\r\n\t\tsuper.onRequestPermissionsResult(_requestCode, _permissions, _grantResults);\r\n\t\t%s\r\n\t\t\r\n\t}","var":"","headerSpec":"When request permission result %d.requestCode","name":"onRequestPermissionsResult","listener":"","icon":"2131165298","description":"onRequestPermissionsResult","parameters":""},{"code":"/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"extends AppCompatActivity {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nextends Service {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"protected void onCreate(Bundle _savedInstanceState) {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\npublic int onStartCommand(Intent _intent, int flags, int startId) {\r\n%1$s\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"super.onCreate(_savedInstanceState);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\n \nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"setContentView\"]\n\u003e0\n\u003e0\n\u003e0\n\u003ereplace\n \nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"private void initializeLogic() {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nprivate void initializeLogic(Intent intent) {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"initializeLogic();\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\ninitializeLogic(intent);\nreturn START_STICKY;\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"initialize(_savedInstanceState);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\ninitialize();\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"private void initialize(Bundle _savedInstanceState) {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nprivate void initialize() {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"runOnUiThread\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nnew Handler(Looper.getMainLooper()).post\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"extends Service {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003eadd\n @Override\n\tpublic IBinder onBind(Intent intent) {\n\t\t\t// This service is not designed to be bound, so we return null.\n\t\t\treturn null;\n\t}\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/","var":"","headerSpec":"onStartCommand","name":"activity2Service","listener":"","icon":"2131165298","description":"This event can convert your activity to service. Do not forget add xml code to your AndroidManifest","parameters":""},{"code":"/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"extends AppCompatActivity {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nextends BroadcastReceiver {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"protected void onCreate(Bundle _savedInstanceState) {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\npublic void onReceive(Context context, Intent intent) {\r\n%1$s\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"super.onCreate(_savedInstanceState);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\n\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"setContentView\"]\n\u003e0\n\u003e0\n\u003e0\n\u003ereplace\n\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"initialize(_savedInstanceState);\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\ninitialize();\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"initializeLogic();\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\ninitializeLogic(context, intent);\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"private void initialize(Bundle _savedInstanceState) {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nprivate void initialize() {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"private void initializeLogic() {\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\nprivate void initializeLogic(Context _context, Intent _intent) {\nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/\r\n/*-JX4UA2y_f1OckjjvxWI.bQwRei-sLEsBmds7ArsRfi0xSFEP3Php97kjdMCs5ed\n\u003e[\"getApplicationContext()\"]\n\u003e0\n\u003e0\n\u003e0\n\u003efind-replace\n \nBpWI8U4flOpx8Ke66QTlZYBA_NEusQ7BN-D0wvZs7ArsRfi0.EP3Php97kjdMCs*/","var":"","headerSpec":"onReceive","name":"activity2Broadcast","listener":"","icon":"2131165298","description":"This event converts your activity to briadcast. Do not forget add xml code to your AndroidManifest","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void showFloatingWindow() {\n\n%s\n\n}","headerSpec":"### On Show Floating Window","var":"FloatWindowFix","icon":"2131165554","name":"OnShowFloatingWindow","listener":"Floating Window 2","description":"OnShow","parameters":""},{"code":"private class FloatingOnTouchListener implements View.OnTouchListener {\n\nprivate int x;\n\nprivate int y;\n\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\t\n\t\n\tswitch (event.getAction()) {\n\t\t\n\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\n\t\tx \u003d (int) event.getRawX();\n\t\t\n\t\ty \u003d (int) event.getRawY();\n\t\t\n\t\tbreak;\n\t\t\n\t\t\n\t\tcase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX();\n\t\t\n\t\tint nowY \u003d (int) event.getRawY();\n\t\t\n\t\tint movedX \u003d nowX - x;\n\t\t\n\t\tint movedY \u003d nowY - y;\n\t\t\n\t\tx \u003d nowX; y \u003d nowY;\n\n      %s\n\t\t\n\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\n\t\tbreak;\n\t\t\n\t}\n\t\n\treturn true;\n\t\n}\n\n}","headerSpec":"### On Touched","var":"FloatWindowFix","icon":"2131165565","name":"OnTouchedListener","listener":"Floating Window 2","description":"OnTouch","parameters":""},{"code":"public void closes(){\n\ntry{\n\t%s\n\t\n}\n\ncatch(Exception e){\n\t\n}\n\n}","headerSpec":"### On Close","var":"FloatWindowFix","icon":"2131165455","name":"On Close","listener":"Floating Window 2","description":"OnClose","parameters":""},{"code":"private void changed() {\n%s\n}","headerSpec":"on ### try to change volume","var":"AudioManager","icon":"2131165975","name":"OnChanged","listener":"AudioManager","description":"Just when You changed The Volume By your app\nthe event will happen","parameters":""},{"code":"public void _Connected () {\n%s\n}","headerSpec":"IF THE DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165593","name":"OnConnected","listener":"Instagram","description":"To Check If Device If Connected","parameters":""},{"code":"public void _NotConnected () {\n%s\n}","headerSpec":"IF DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165575","name":"OnNotConnected","listener":"Instagram","description":"To Check If Device Is Connected !","parameters":""},{"code":"%s","headerSpec":"### On Try to download","var":"InstagramDownloader","icon":"2131165538","name":"TryDownload","listener":"Instagram//ArabWare","description":"Start","parameters":""},{"code":"public class TextViewUndoRedo {\n\t\n\tprivate boolean mIsUndoOrRedo \u003d false;\n\tprivate EditHistory mEditHistory;\n\tprivate EditTextChangeListener mChangeListener;\n\tprivate TextView mTextView;\n\n\t\n\tpublic TextViewUndoRedo(TextView textView) {\n\t\tmTextView \u003d textView;\n\t\tmEditHistory \u003d new EditHistory();\n\t\tmChangeListener \u003d new EditTextChangeListener();\n\t\tmTextView.addTextChangedListener(mChangeListener);\n\t}\n\n\tpublic void disconnect() {\n\t\tmTextView.removeTextChangedListener(mChangeListener);\n\t}\n\n\tpublic void setMaxHistorySize(int maxHistorySize) {\n\t\tmEditHistory.setMaxHistorySize(maxHistorySize);\n\t}\n\n\tpublic void clearHistory() {\n\t\tmEditHistory.clear();\n\t}\n\n\t\n\tpublic boolean getCanUndo() {\n\t\treturn (mEditHistory.mmPosition \u003e 0);\n\t}\n\n\tpublic void undo() {\n\t\tEditItem edit \u003d mEditHistory.getPrevious();\n\t\tif (edit \u003d\u003d null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEditable text \u003d mTextView.getEditableText();\n\t\tint start \u003d edit.mmStart;\n\t\tint end \u003d start + (edit.mmAfter !\u003d null ? edit.mmAfter.length() : 0);\n\n\t\tmIsUndoOrRedo \u003d true;\n\t\ttext.replace(start, end, edit.mmBefore);\n\t\tmIsUndoOrRedo \u003d false;\n\n\t\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\n\t\t\ttext.removeSpan(o);\n\t\t}\n\n\t\tSelection.setSelection(text, edit.mmBefore \u003d\u003d null ? start\n\t\t\t\t: (start + edit.mmBefore.length()));\n\t}\n\n\tpublic boolean getCanRedo() {\n\t\treturn (mEditHistory.mmPosition \u003c mEditHistory.mmHistory.size());\n\t}\n\n\tpublic void redo() {\n\t\tEditItem edit \u003d mEditHistory.getNext();\n\t\tif (edit \u003d\u003d null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEditable text \u003d mTextView.getEditableText();\n\t\tint start \u003d edit.mmStart;\n\t\tint end \u003d start + (edit.mmBefore !\u003d null ? edit.mmBefore.length() : 0);\n\n\t\tmIsUndoOrRedo \u003d true;\n\t\ttext.replace(start, end, edit.mmAfter);\n\t\tmIsUndoOrRedo \u003d false;\n\n\t\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\n\t\t\ttext.removeSpan(o);\n\t\t}\n\n\t\tSelection.setSelection(text, edit.mmAfter \u003d\u003d null ? start\n\t\t\t\t: (start + edit.mmAfter.length()));\n\t}\n\n\tpublic void storePersistentState(android.content.SharedPreferences.Editor editor, String prefix) {\n\n\t\teditor.putString(prefix + \".hash\",\n\t\t\t\tString.valueOf(mTextView.getText().toString().hashCode()));\n\t\teditor.putInt(prefix + \".maxSize\", mEditHistory.mmMaxHistorySize);\n\t\teditor.putInt(prefix + \".position\", mEditHistory.mmPosition);\n\t\teditor.putInt(prefix + \".size\", mEditHistory.mmHistory.size());\n\n\t\tint i \u003d 0;\n\t\tfor (EditItem ei : mEditHistory.mmHistory) {\n\t\t\tString pre \u003d prefix + \".\" + i;\n\n\t\t\teditor.putInt(pre + \".start\", ei.mmStart);\n\t\t\teditor.putString(pre + \".before\", ei.mmBefore.toString());\n\t\t\teditor.putString(pre + \".after\", ei.mmAfter.toString());\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tpublic boolean restorePersistentState(SharedPreferences sp, String prefix)\n\t\t\tthrows IllegalStateException {\n\n\t\tboolean ok \u003d doRestorePersistentState(sp, prefix);\n\t\tif (!ok) {\n\t\t\tmEditHistory.clear();\n\t\t}\n\n\t\treturn ok;\n\t}\n\n\tprivate boolean doRestorePersistentState(SharedPreferences sp, String prefix) {\n\n\t\tString hash \u003d sp.getString(prefix + \".hash\", null);\n\t\tif (hash \u003d\u003d null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Integer.valueOf(hash) !\u003d mTextView.getText().toString().hashCode()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmEditHistory.clear();\n\t\tmEditHistory.mmMaxHistorySize \u003d sp.getInt(prefix + \".maxSize\", -1);\n\n\t\tint count \u003d sp.getInt(prefix + \".size\", -1);\n\t\tif (count \u003d\u003d -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (int i \u003d 0; i \u003c count; i++) {\n\t\t\tString pre \u003d prefix + \".\" + i;\n\n\t\t\tint start \u003d sp.getInt(pre + \".start\", -1);\n\t\t\tString before \u003d sp.getString(pre + \".before\", null);\n\t\t\tString after \u003d sp.getString(pre + \".after\", null);\n\n\t\t\tif (start \u003d\u003d -1 || before \u003d\u003d null || after \u003d\u003d null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tmEditHistory.add(new EditItem(start, before, after));\n\t\t}\n\n\t\tmEditHistory.mmPosition \u003d sp.getInt(prefix + \".position\", -1);\n\t\tif (mEditHistory.mmPosition \u003d\u003d -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate final class EditHistory {\n\n\t\tprivate int mmPosition \u003d 0;\n\t\tprivate int mmMaxHistorySize \u003d -1;\n\t\tprivate final LinkedList\u003cEditItem\u003e mmHistory \u003d new LinkedList\u003cEditItem\u003e();\n\t\tprivate void clear() {\n\t\t\tmmPosition \u003d 0;\n\t\t\tmmHistory.clear();\n\t\t}\n\n\t\tprivate void add(EditItem item) {\n\t\t\twhile (mmHistory.size() \u003e mmPosition) {\n\t\t\t\tmmHistory.removeLast();\n\t\t\t}\n\t\t\tmmHistory.add(item);\n\t\t\tmmPosition++;\n\n\t\t\tif (mmMaxHistorySize \u003e\u003d 0) {\n\t\t\t\ttrimHistory();\n\t\t\t}\n\t\t}\n\n\t\tprivate void setMaxHistorySize(int maxHistorySize) {\n\t\t\tmmMaxHistorySize \u003d maxHistorySize;\n\t\t\tif (mmMaxHistorySize \u003e\u003d 0) {\n\t\t\t\ttrimHistory();\n\t\t\t}\n\t\t}\n\n\t\tprivate void trimHistory() {\n\t\t\twhile (mmHistory.size() \u003e mmMaxHistorySize) {\n\t\t\t\tmmHistory.removeFirst();\n\t\t\t\tmmPosition--;\n\t\t\t}\n\n\t\t\tif (mmPosition \u003c 0) {\n\t\t\t\tmmPosition \u003d 0;\n\t\t\t}\n\t\t}\n\n\t\tprivate EditItem getPrevious() {\n\t\t\tif (mmPosition \u003d\u003d 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tmmPosition--;\n\t\t\treturn mmHistory.get(mmPosition);\n\t\t}\n\n\t\tprivate EditItem getNext() {\n\t\t\tif (mmPosition \u003e\u003d mmHistory.size()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tEditItem item \u003d mmHistory.get(mmPosition);\n\t\t\tmmPosition++;\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tprivate final class EditItem {\n\t\tprivate final int mmStart;\n\t\tprivate final CharSequence mmBefore;\n\t\tprivate final CharSequence mmAfter;\n\n\t\tpublic EditItem(int start, CharSequence before, CharSequence after) {\n\t\t\tmmStart \u003d start;\n\t\t\tmmBefore \u003d before;\n\t\t\tmmAfter \u003d after;\n\t\t}\n\t}\n\n\tprivate final class EditTextChangeListener implements TextWatcher {\n\n\t\tprivate CharSequence mBeforeChange;\n\t\tprivate CharSequence mAfterChange;\n\n\t\tpublic void beforeTextChanged(CharSequence s, int start, int count,\n\t\t\t\tint after) {\n\t\t\tif (mIsUndoOrRedo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmBeforeChange \u003d s.subSequence(start, start + count);\n\t\t}\n\n\t\tpublic void onTextChanged(CharSequence s, int start, int before,\n\t\t\t\tint count) {\n\t\t\tif (mIsUndoOrRedo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmAfterChange \u003d s.subSequence(start, start + count);\n\t\t\tmEditHistory.add(new EditItem(start, mBeforeChange, mAfterChange));\n\t\t}\n\n\t\tpublic void afterTextChanged(Editable s) {\n\t\t}\n\t}\n}","headerSpec":"don\u0027t put any blocks","var":"UndoRedo","icon":"2131165403","name":"Enable UndoRedo","listener":"UndoRedo","description":"Enable UndoRedo","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"public void _rootCh () {\ntry {\n\nRuntime.getRuntime().exec(\"su\"); \n%s\n} catch (Exception e ) {\n\n}} ","var":"Check Root","headerSpec":"Cihazda Root varsa","name":"Root varsa","listener":"Check Root","icon":"2131166350","description":"Cihazda Root varsa","parameters":""},{"code":"public void _rootC () {\ntry {\n\nRuntime.getRuntime().exec(\"su\"); \n\n} catch (Exception e ) {\n%s\n}} ","var":"Check Root","headerSpec":"Cihazda Root yoksa","name":"Root yoksa","listener":"Check Root","icon":"2131166349","description":"Cihazda Root yoksa","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void showFloatingWindow() {\n\n%s\n\n}","headerSpec":"### On Show Floating Window","var":"FloatWindowFix","icon":"2131165554","name":"OnShowFloatingWindow","listener":"Floating Window 2","description":"OnShow","parameters":""},{"code":"private class FloatingOnTouchListener implements View.OnTouchListener {\n\nprivate int x;\n\nprivate int y;\n\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\t\n\t\n\tswitch (event.getAction()) {\n\t\t\n\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\n\t\tx \u003d (int) event.getRawX();\n\t\t\n\t\ty \u003d (int) event.getRawY();\n\t\t\n\t\tbreak;\n\t\t\n\t\t\n\t\tcase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX();\n\t\t\n\t\tint nowY \u003d (int) event.getRawY();\n\t\t\n\t\tint movedX \u003d nowX - x;\n\t\t\n\t\tint movedY \u003d nowY - y;\n\t\t\n\t\tx \u003d nowX; y \u003d nowY;\n\n      %s\n\t\t\n\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\n\t\tbreak;\n\t\t\n\t}\n\t\n\treturn true;\n\t\n}\n\n}","headerSpec":"### On Touched","var":"FloatWindowFix","icon":"2131165565","name":"OnTouchedListener","listener":"Floating Window 2","description":"OnTouch","parameters":""},{"code":"public void closes(){\n\ntry{\n\t%s\n\t\n}\n\ncatch(Exception e){\n\t\n}\n\n}","headerSpec":"### On Close","var":"FloatWindowFix","icon":"2131165455","name":"On Close","listener":"Floating Window 2","description":"OnClose","parameters":""},{"code":"private void changed() {\n%s\n}","headerSpec":"on ### try to change volume","var":"AudioManager","icon":"2131165975","name":"OnChanged","listener":"AudioManager","description":"Just when You changed The Volume By your app\nthe event will happen","parameters":""},{"code":"public void _Connected () {\n%s\n}","headerSpec":"IF THE DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165593","name":"OnConnected","listener":"Instagram","description":"To Check If Device If Connected","parameters":""},{"code":"public void _NotConnected () {\n%s\n}","headerSpec":"IF DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165575","name":"OnNotConnected","listener":"Instagram","description":"To Check If Device Is Connected !","parameters":""},{"code":"%s","headerSpec":"### On Try to download","var":"InstagramDownloader","icon":"2131165538","name":"TryDownload","listener":"Instagram//ArabWare","description":"Start","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"public void _ArabWareChannel () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n%s\n} catch (Exception e ) {\n}\n}","headerSpec":"when device is rooted","var":"SuperUser","icon":"2131166350","name":"SuperUser","listener":"SuperUser","description":"check if device is rooted","parameters":""},{"code":"public void _ArabWareChannels () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n} catch (Exception e ) {\n%s\n}\n}","headerSpec":"when device not rooted","var":"SuperUser","icon":"2131166349","name":"Normal User","listener":"SuperUser","description":"use it to check if device not rooted","parameters":""},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"public void _ArabWareChannel () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n%s\n} catch (Exception e ) {\n}\n}","headerSpec":"when device is rooted","var":"SuperUser","icon":"2131166350","name":"SuperUser","listener":"SuperUser","description":"check if device is rooted","parameters":""},{"code":"public void _ArabWareChannels () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n} catch (Exception e ) {\n%s\n}\n}","headerSpec":"when device not rooted","var":"SuperUser","icon":"2131166349","name":"Normal User","listener":"SuperUser","description":"use it to check if device not rooted","parameters":""},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"public void _ArabWareChannel () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n%s\n} catch (Exception e ) {\n}\n}","headerSpec":"when device is rooted","var":"SuperUser","icon":"2131166350","name":"SuperUser","listener":"SuperUser","description":"check if device is rooted","parameters":""},{"code":"public void _ArabWareChannels () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n} catch (Exception e ) {\n%s\n}\n}","headerSpec":"when device not rooted","var":"SuperUser","icon":"2131166349","name":"Normal User","listener":"SuperUser","description":"use it to check if device not rooted","parameters":""},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void showFloatingWindow() {\n\n%s\n\n}","headerSpec":"### On Show Floating Window","var":"FloatWindowFix","icon":"2131165554","name":"OnShowFloatingWindow","listener":"Floating Window 2","description":"OnShow","parameters":""},{"code":"private class FloatingOnTouchListener implements View.OnTouchListener {\n\nprivate int x;\n\nprivate int y;\n\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\t\n\t\n\tswitch (event.getAction()) {\n\t\t\n\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\n\t\tx \u003d (int) event.getRawX();\n\t\t\n\t\ty \u003d (int) event.getRawY();\n\t\t\n\t\tbreak;\n\t\t\n\t\t\n\t\tcase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX();\n\t\t\n\t\tint nowY \u003d (int) event.getRawY();\n\t\t\n\t\tint movedX \u003d nowX - x;\n\t\t\n\t\tint movedY \u003d nowY - y;\n\t\t\n\t\tx \u003d nowX; y \u003d nowY;\n\n      %s\n\t\t\n\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\n\t\tbreak;\n\t\t\n\t}\n\t\n\treturn true;\n\t\n}\n\n}","headerSpec":"### On Touched","var":"FloatWindowFix","icon":"2131165565","name":"OnTouchedListener","listener":"Floating Window 2","description":"OnTouch","parameters":""},{"code":"public void closes(){\n\ntry{\n\t%s\n\t\n}\n\ncatch(Exception e){\n\t\n}\n\n}","headerSpec":"### On Close","var":"FloatWindowFix","icon":"2131165455","name":"On Close","listener":"Floating Window 2","description":"OnClose","parameters":""},{"code":"private void changed() {\n%s\n}","headerSpec":"on ### try to change volume","var":"AudioManager","icon":"2131165975","name":"OnChanged","listener":"AudioManager","description":"Just when You changed The Volume By your app\nthe event will happen","parameters":""},{"code":"public void _Connected () {\n%s\n}","headerSpec":"IF THE DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165593","name":"OnConnected","listener":"Instagram","description":"To Check If Device If Connected","parameters":""},{"code":"public void _NotConnected () {\n%s\n}","headerSpec":"IF DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165575","name":"OnNotConnected","listener":"Instagram","description":"To Check If Device Is Connected !","parameters":""},{"code":"%s","headerSpec":"### On Try to download","var":"InstagramDownloader","icon":"2131165538","name":"TryDownload","listener":"Instagram//ArabWare","description":"Start","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"public void _ArabWareChannel () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n%s\n} catch (Exception e ) {\n}\n}","headerSpec":"when device is rooted","var":"SuperUser","icon":"2131166350","name":"SuperUser","listener":"SuperUser","description":"check if device is rooted","parameters":""},{"code":"public void _ArabWareChannels () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n} catch (Exception e ) {\n%s\n}\n}","headerSpec":"when device not rooted","var":"SuperUser","icon":"2131166349","name":"Normal User","listener":"SuperUser","description":"use it to check if device not rooted","parameters":""},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void showFloatingWindow() {\n\n%s\n\n}","headerSpec":"### On Show Floating Window","var":"FloatWindowFix","icon":"2131165554","name":"OnShowFloatingWindow","listener":"Floating Window 2","description":"OnShow","parameters":""},{"code":"private class FloatingOnTouchListener implements View.OnTouchListener {\n\nprivate int x;\n\nprivate int y;\n\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\t\n\t\n\tswitch (event.getAction()) {\n\t\t\n\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\n\t\tx \u003d (int) event.getRawX();\n\t\t\n\t\ty \u003d (int) event.getRawY();\n\t\t\n\t\tbreak;\n\t\t\n\t\t\n\t\tcase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX();\n\t\t\n\t\tint nowY \u003d (int) event.getRawY();\n\t\t\n\t\tint movedX \u003d nowX - x;\n\t\t\n\t\tint movedY \u003d nowY - y;\n\t\t\n\t\tx \u003d nowX; y \u003d nowY;\n\n      %s\n\t\t\n\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\n\t\tbreak;\n\t\t\n\t}\n\t\n\treturn true;\n\t\n}\n\n}","headerSpec":"### On Touched","var":"FloatWindowFix","icon":"2131165565","name":"OnTouchedListener","listener":"Floating Window 2","description":"OnTouch","parameters":""},{"code":"public void closes(){\n\ntry{\n\t%s\n\t\n}\n\ncatch(Exception e){\n\t\n}\n\n}","headerSpec":"### On Close","var":"FloatWindowFix","icon":"2131165455","name":"On Close","listener":"Floating Window 2","description":"OnClose","parameters":""},{"code":"private void changed() {\n%s\n}","headerSpec":"on ### try to change volume","var":"AudioManager","icon":"2131165975","name":"OnChanged","listener":"AudioManager","description":"Just when You changed The Volume By your app\nthe event will happen","parameters":""},{"code":"public void _Connected () {\n%s\n}","headerSpec":"IF THE DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165593","name":"OnConnected","listener":"Instagram","description":"To Check If Device If Connected","parameters":""},{"code":"public void _NotConnected () {\n%s\n}","headerSpec":"IF DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165575","name":"OnNotConnected","listener":"Instagram","description":"To Check If Device Is Connected !","parameters":""},{"code":"%s","headerSpec":"### On Try to download","var":"InstagramDownloader","icon":"2131165538","name":"TryDownload","listener":"Instagram//ArabWare","description":"Start","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"public void _ArabWareChannel () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n%s\n} catch (Exception e ) {\n}\n}","headerSpec":"when device is rooted","var":"SuperUser","icon":"2131166350","name":"SuperUser","listener":"SuperUser","description":"check if device is rooted","parameters":""},{"code":"public void _ArabWareChannels () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n} catch (Exception e ) {\n%s\n}\n}","headerSpec":"when device not rooted","var":"SuperUser","icon":"2131166349","name":"Normal User","listener":"SuperUser","description":"use it to check if device not rooted","parameters":""},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void showFloatingWindow() {\n\n%s\n\n}","headerSpec":"### On Show Floating Window","var":"FloatWindowFix","icon":"2131165554","name":"OnShowFloatingWindow","listener":"Floating Window 2","description":"OnShow","parameters":""},{"code":"private class FloatingOnTouchListener implements View.OnTouchListener {\n\nprivate int x;\n\nprivate int y;\n\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\t\n\t\n\tswitch (event.getAction()) {\n\t\t\n\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\n\t\tx \u003d (int) event.getRawX();\n\t\t\n\t\ty \u003d (int) event.getRawY();\n\t\t\n\t\tbreak;\n\t\t\n\t\t\n\t\tcase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX();\n\t\t\n\t\tint nowY \u003d (int) event.getRawY();\n\t\t\n\t\tint movedX \u003d nowX - x;\n\t\t\n\t\tint movedY \u003d nowY - y;\n\t\t\n\t\tx \u003d nowX; y \u003d nowY;\n\n      %s\n\t\t\n\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\n\t\tbreak;\n\t\t\n\t}\n\t\n\treturn true;\n\t\n}\n\n}","headerSpec":"### On Touched","var":"FloatWindowFix","icon":"2131165565","name":"OnTouchedListener","listener":"Floating Window 2","description":"OnTouch","parameters":""},{"code":"public void closes(){\n\ntry{\n\t%s\n\t\n}\n\ncatch(Exception e){\n\t\n}\n\n}","headerSpec":"### On Close","var":"FloatWindowFix","icon":"2131165455","name":"On Close","listener":"Floating Window 2","description":"OnClose","parameters":""},{"code":"private void changed() {\n%s\n}","headerSpec":"on ### try to change volume","var":"AudioManager","icon":"2131165975","name":"OnChanged","listener":"AudioManager","description":"Just when You changed The Volume By your app\nthe event will happen","parameters":""},{"code":"public void _Connected () {\n%s\n}","headerSpec":"IF THE DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165593","name":"OnConnected","listener":"Instagram","description":"To Check If Device If Connected","parameters":""},{"code":"public void _NotConnected () {\n%s\n}","headerSpec":"IF DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165575","name":"OnNotConnected","listener":"Instagram","description":"To Check If Device Is Connected !","parameters":""},{"code":"%s","headerSpec":"### On Try to download","var":"InstagramDownloader","icon":"2131165538","name":"TryDownload","listener":"Instagram//ArabWare","description":"Start","parameters":""},{"code":"public class TextViewUndoRedo {\n\t\n\tprivate boolean mIsUndoOrRedo \u003d false;\n\tprivate EditHistory mEditHistory;\n\tprivate EditTextChangeListener mChangeListener;\n\tprivate TextView mTextView;\n\n\t\n\tpublic TextViewUndoRedo(TextView textView) {\n\t\tmTextView \u003d textView;\n\t\tmEditHistory \u003d new EditHistory();\n\t\tmChangeListener \u003d new EditTextChangeListener();\n\t\tmTextView.addTextChangedListener(mChangeListener);\n\t}\n\n\tpublic void disconnect() {\n\t\tmTextView.removeTextChangedListener(mChangeListener);\n\t}\n\n\tpublic void setMaxHistorySize(int maxHistorySize) {\n\t\tmEditHistory.setMaxHistorySize(maxHistorySize);\n\t}\n\n\tpublic void clearHistory() {\n\t\tmEditHistory.clear();\n\t}\n\n\t\n\tpublic boolean getCanUndo() {\n\t\treturn (mEditHistory.mmPosition \u003e 0);\n\t}\n\n\tpublic void undo() {\n\t\tEditItem edit \u003d mEditHistory.getPrevious();\n\t\tif (edit \u003d\u003d null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEditable text \u003d mTextView.getEditableText();\n\t\tint start \u003d edit.mmStart;\n\t\tint end \u003d start + (edit.mmAfter !\u003d null ? edit.mmAfter.length() : 0);\n\n\t\tmIsUndoOrRedo \u003d true;\n\t\ttext.replace(start, end, edit.mmBefore);\n\t\tmIsUndoOrRedo \u003d false;\n\n\t\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\n\t\t\ttext.removeSpan(o);\n\t\t}\n\n\t\tSelection.setSelection(text, edit.mmBefore \u003d\u003d null ? start\n\t\t\t\t: (start + edit.mmBefore.length()));\n\t}\n\n\tpublic boolean getCanRedo() {\n\t\treturn (mEditHistory.mmPosition \u003c mEditHistory.mmHistory.size());\n\t}\n\n\tpublic void redo() {\n\t\tEditItem edit \u003d mEditHistory.getNext();\n\t\tif (edit \u003d\u003d null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEditable text \u003d mTextView.getEditableText();\n\t\tint start \u003d edit.mmStart;\n\t\tint end \u003d start + (edit.mmBefore !\u003d null ? edit.mmBefore.length() : 0);\n\n\t\tmIsUndoOrRedo \u003d true;\n\t\ttext.replace(start, end, edit.mmAfter);\n\t\tmIsUndoOrRedo \u003d false;\n\n\t\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\n\t\t\ttext.removeSpan(o);\n\t\t}\n\n\t\tSelection.setSelection(text, edit.mmAfter \u003d\u003d null ? start\n\t\t\t\t: (start + edit.mmAfter.length()));\n\t}\n\n\tpublic void storePersistentState(android.content.SharedPreferences.Editor editor, String prefix) {\n\n\t\teditor.putString(prefix + \".hash\",\n\t\t\t\tString.valueOf(mTextView.getText().toString().hashCode()));\n\t\teditor.putInt(prefix + \".maxSize\", mEditHistory.mmMaxHistorySize);\n\t\teditor.putInt(prefix + \".position\", mEditHistory.mmPosition);\n\t\teditor.putInt(prefix + \".size\", mEditHistory.mmHistory.size());\n\n\t\tint i \u003d 0;\n\t\tfor (EditItem ei : mEditHistory.mmHistory) {\n\t\t\tString pre \u003d prefix + \".\" + i;\n\n\t\t\teditor.putInt(pre + \".start\", ei.mmStart);\n\t\t\teditor.putString(pre + \".before\", ei.mmBefore.toString());\n\t\t\teditor.putString(pre + \".after\", ei.mmAfter.toString());\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\tpublic boolean restorePersistentState(SharedPreferences sp, String prefix)\n\t\t\tthrows IllegalStateException {\n\n\t\tboolean ok \u003d doRestorePersistentState(sp, prefix);\n\t\tif (!ok) {\n\t\t\tmEditHistory.clear();\n\t\t}\n\n\t\treturn ok;\n\t}\n\n\tprivate boolean doRestorePersistentState(SharedPreferences sp, String prefix) {\n\n\t\tString hash \u003d sp.getString(prefix + \".hash\", null);\n\t\tif (hash \u003d\u003d null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Integer.valueOf(hash) !\u003d mTextView.getText().toString().hashCode()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmEditHistory.clear();\n\t\tmEditHistory.mmMaxHistorySize \u003d sp.getInt(prefix + \".maxSize\", -1);\n\n\t\tint count \u003d sp.getInt(prefix + \".size\", -1);\n\t\tif (count \u003d\u003d -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (int i \u003d 0; i \u003c count; i++) {\n\t\t\tString pre \u003d prefix + \".\" + i;\n\n\t\t\tint start \u003d sp.getInt(pre + \".start\", -1);\n\t\t\tString before \u003d sp.getString(pre + \".before\", null);\n\t\t\tString after \u003d sp.getString(pre + \".after\", null);\n\n\t\t\tif (start \u003d\u003d -1 || before \u003d\u003d null || after \u003d\u003d null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tmEditHistory.add(new EditItem(start, before, after));\n\t\t}\n\n\t\tmEditHistory.mmPosition \u003d sp.getInt(prefix + \".position\", -1);\n\t\tif (mEditHistory.mmPosition \u003d\u003d -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate final class EditHistory {\n\n\t\tprivate int mmPosition \u003d 0;\n\t\tprivate int mmMaxHistorySize \u003d -1;\n\t\tprivate final LinkedList\u003cEditItem\u003e mmHistory \u003d new LinkedList\u003cEditItem\u003e();\n\t\tprivate void clear() {\n\t\t\tmmPosition \u003d 0;\n\t\t\tmmHistory.clear();\n\t\t}\n\n\t\tprivate void add(EditItem item) {\n\t\t\twhile (mmHistory.size() \u003e mmPosition) {\n\t\t\t\tmmHistory.removeLast();\n\t\t\t}\n\t\t\tmmHistory.add(item);\n\t\t\tmmPosition++;\n\n\t\t\tif (mmMaxHistorySize \u003e\u003d 0) {\n\t\t\t\ttrimHistory();\n\t\t\t}\n\t\t}\n\n\t\tprivate void setMaxHistorySize(int maxHistorySize) {\n\t\t\tmmMaxHistorySize \u003d maxHistorySize;\n\t\t\tif (mmMaxHistorySize \u003e\u003d 0) {\n\t\t\t\ttrimHistory();\n\t\t\t}\n\t\t}\n\n\t\tprivate void trimHistory() {\n\t\t\twhile (mmHistory.size() \u003e mmMaxHistorySize) {\n\t\t\t\tmmHistory.removeFirst();\n\t\t\t\tmmPosition--;\n\t\t\t}\n\n\t\t\tif (mmPosition \u003c 0) {\n\t\t\t\tmmPosition \u003d 0;\n\t\t\t}\n\t\t}\n\n\t\tprivate EditItem getPrevious() {\n\t\t\tif (mmPosition \u003d\u003d 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tmmPosition--;\n\t\t\treturn mmHistory.get(mmPosition);\n\t\t}\n\n\t\tprivate EditItem getNext() {\n\t\t\tif (mmPosition \u003e\u003d mmHistory.size()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tEditItem item \u003d mmHistory.get(mmPosition);\n\t\t\tmmPosition++;\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tprivate final class EditItem {\n\t\tprivate final int mmStart;\n\t\tprivate final CharSequence mmBefore;\n\t\tprivate final CharSequence mmAfter;\n\n\t\tpublic EditItem(int start, CharSequence before, CharSequence after) {\n\t\t\tmmStart \u003d start;\n\t\t\tmmBefore \u003d before;\n\t\t\tmmAfter \u003d after;\n\t\t}\n\t}\n\n\tprivate final class EditTextChangeListener implements TextWatcher {\n\n\t\tprivate CharSequence mBeforeChange;\n\t\tprivate CharSequence mAfterChange;\n\n\t\tpublic void beforeTextChanged(CharSequence s, int start, int count,\n\t\t\t\tint after) {\n\t\t\tif (mIsUndoOrRedo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmBeforeChange \u003d s.subSequence(start, start + count);\n\t\t}\n\n\t\tpublic void onTextChanged(CharSequence s, int start, int before,\n\t\t\t\tint count) {\n\t\t\tif (mIsUndoOrRedo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmAfterChange \u003d s.subSequence(start, start + count);\n\t\t\tmEditHistory.add(new EditItem(start, mBeforeChange, mAfterChange));\n\t\t}\n\n\t\tpublic void afterTextChanged(Editable s) {\n\t\t}\n\t}\n}","headerSpec":"don\u0027t put any blocks","var":"UndoRedo","icon":"2131165403","name":"Enable UndoRedo","listener":"UndoRedo","description":"Enable UndoRedo","parameters":""},{"code":"private void initSpeedDial(boolean _addActionItems, View _view) {\n%s\n}","headerSpec":"when SpeedDialView listen %b.addActionItems","var":"SpeedDialView","icon":"2131165565","name":"initSpeedDial","listener":"SpeedDialView","description":"This is listener when fab button speed dial click","parameters":"%b"},{"code":"public void _ArabWareChannel () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n%s\n} catch (Exception e ) {\n}\n}","headerSpec":"when device is rooted","var":"SuperUser","icon":"2131166350","name":"SuperUser","listener":"SuperUser","description":"check if device is rooted","parameters":""},{"code":"public void _ArabWareChannels () {\ntry {\nRuntime.getRuntime().exec(\"su\");\n} catch (Exception e ) {\n%s\n}\n}","headerSpec":"when device not rooted","var":"SuperUser","icon":"2131166349","name":"Normal User","listener":"SuperUser","description":"use it to check if device not rooted","parameters":""},{"code":"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n/*%s*/\nbyte key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;\n}","headerSpec":"don\u0027t put any thing here bro","var":"Text Encryptor","icon":"2131165595","name":"Enable AES","listener":"Text Encryptor","description":"use this to Enable it","parameters":""},{"code":"public void _ArabWareShareStart () {\r\n/*%s*/\n\t\tString apk \u003d getApplicationContext().getPackageName().concat(\".apk\");\n\t\tString uri \u003d (getApplicationContext().getPackageName());\n\t\t\n\t\ttry {\n\t\t\t\tandroid.content.pm.PackageInfo pi \u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\n\t\t\t\t\n\t\t\t\tapk \u003d pi.applicationInfo.publicSourceDir;\n\t\t} catch (Exception e) {\n\t\t\t\tshowMessage(e.toString());\n\t\t}\n\t\tIntent iten \u003d new Intent(Intent.ACTION_SEND);\n\t\titen.setType(\"*/*\");\n\t\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\n\t\t\n\t\tstartActivity(Intent.createChooser(iten, \"\"));\r\n\t}","headerSpec":"don\u0027t put any thing here","var":"ShareApp","icon":"2131165554","name":"EnableShare","listener":"ShareApp","description":"for enable it","parameters":""},{"code":"private void showAnimation() {\r\n        for (int i \u003d 0; i \u003c WP7Indicators.size(); i++) {\r\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\n%s\n        }\r\n    }","headerSpec":"when show animation","var":"windowsprogress","icon":"2131165554","name":"ShowAnimation","listener":"WindowProgress","description":"showAnimation","parameters":""},{"code":"private void initializeIndicators() {\r\n        this.removeAllViews();\r\n        ArrayList\u003cWP7Indicator\u003e WP7Indicators \u003d new ArrayList\u003c\u003e();\r\n        for (int i \u003d 0; i \u003c INDICATOR_COUNT_DEF; i++) {\r\n            WP7Indicator WP7Indicator \u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\r\n            WP7Indicators.add(WP7Indicator);\r\n            this.addView(WP7Indicator);\r\n        }\r\n        this.WP7Indicators \u003d WP7Indicators;\n%s\n    }","headerSpec":"on initializeIndicators","var":"windowsprogress","icon":"2131165406","name":"initializeIndicators","listener":"WindowProgress","description":"","parameters":""},{"code":"private void show() {\r\n        if (isShowing)\r\n            return;\r\n        isShowing \u003d true;\r\n        showAnimation();\n%s\n    }","headerSpec":"On Show","var":"windowsprogress","icon":"2131165554","name":"on show","listener":"WindowProgress","description":"","parameters":""},{"code":"private void hide() {\r\n        clearIndicatorsAnimations();\r\n        isShowing \u003d false;\n%s\n    }","headerSpec":"On Hide","var":"windowsprogress","icon":"2131165466","name":"On Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"private void startWholeViewAnimation() {\r\n        objectAnimator \u003d ObjectAnimator.ofFloat(this, \"translationX\", -200, 200);\r\n        objectAnimator.setInterpolator(new LinearInterpolator());\r\n        objectAnimator.setDuration(animationDuration + (5 * interval));\r\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\r\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\r\n        objectAnimator.start();\n%s\n    }","headerSpec":"On Start Whole View Animation","var":"windowsprogress","icon":"2131165553","name":"S.W.V.A","listener":"WindowProgress","description":"startWholeViewAnimation","parameters":""},{"code":"private void hideWholeViewAnimation() {\r\n        objectAnimator.removeAllListeners();\r\n        objectAnimator.cancel();\r\n        objectAnimator.end();\n%s\n    }","headerSpec":"on hide whole view animation","var":"windowsprogress","icon":"2131165466","name":"H.W.V.A","listener":"WindowProgress","description":"","parameters":""},{"code":"private void clearIndicatorsAnimations() {\r\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\r\n            WP7Indicator.removeAnim();\n%s\n        }\r\n    }","headerSpec":"On Clear Indicators Animations","var":"windowsprogress","icon":"2131165455","name":"On Clear Indicators Animations","listener":"WindowProgress","description":"","parameters":""},{"code":"public void showProgressBar() {\r\n        progressBarCount++;\r\n        if (progressBarCount \u003d\u003d 1) {\r\n            handler.post(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                   WP7ProgressBar.this.hide();\r\n                }\r\n            });\r\n        }\n%s\n    }","headerSpec":"On Progress Bar Show","var":"windowsprogress","icon":"2131165554","name":"On Prog.Bar Show","listener":"WindowProgress","description":"","parameters":""},{"code":"public void hideProgressBar() {\r\n        progressBarCount--;\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (progressBarCount \u003d\u003d 0) {\r\n                WP7ProgressBar.this.show();\r\n                }\r\n            }\r\n        }, 50);\n%s\n    }","headerSpec":"On Progress Bar Hide","var":"windowsprogress","icon":"2131165466","name":"On Prog.Bar Hide","listener":"WindowProgress","description":"","parameters":""},{"code":"public void ComponentsMaker () {\r\n\t\t\n\t\t/*\n%s\n*/\r\n\t}\r","headerSpec":"Create Comments here","var":"Comments Maker","icon":"2131166159","name":"Create Comments","listener":"Comments Maker","description":"","parameters":""},{"code":"%s","headerSpec":"Put Here More Block From My Own Blocks","var":"MoreBlockMaker","icon":"2131165615","name":"MoreBlockMaker","listener":"MoreBlockMaker","description":"For Create More Blocks","parameters":""},{"code":"private void showFloatingWindow() {\n\n%s\n\n}","headerSpec":"### On Show Floating Window","var":"FloatWindowFix","icon":"2131165554","name":"OnShowFloatingWindow","listener":"Floating Window 2","description":"OnShow","parameters":""},{"code":"private class FloatingOnTouchListener implements View.OnTouchListener {\n\nprivate int x;\n\nprivate int y;\n\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\t\n\t\n\tswitch (event.getAction()) {\n\t\t\n\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\n\t\tx \u003d (int) event.getRawX();\n\t\t\n\t\ty \u003d (int) event.getRawY();\n\t\t\n\t\tbreak;\n\t\t\n\t\t\n\t\tcase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX();\n\t\t\n\t\tint nowY \u003d (int) event.getRawY();\n\t\t\n\t\tint movedX \u003d nowX - x;\n\t\t\n\t\tint movedY \u003d nowY - y;\n\t\t\n\t\tx \u003d nowX; y \u003d nowY;\n\n      %s\n\t\t\n\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\n\t\tbreak;\n\t\t\n\t}\n\t\n\treturn true;\n\t\n}\n\n}","headerSpec":"### On Touched","var":"FloatWindowFix","icon":"2131165565","name":"OnTouchedListener","listener":"Floating Window 2","description":"OnTouch","parameters":""},{"code":"public void closes(){\n\ntry{\n\t%s\n\t\n}\n\ncatch(Exception e){\n\t\n}\n\n}","headerSpec":"### On Close","var":"FloatWindowFix","icon":"2131165455","name":"On Close","listener":"Floating Window 2","description":"OnClose","parameters":""},{"code":"private void changed() {\n%s\n}","headerSpec":"on ### try to change volume","var":"AudioManager","icon":"2131165975","name":"OnChanged","listener":"AudioManager","description":"Just when You changed The Volume By your app\nthe event will happen","parameters":""},{"code":"public void _Connected () {\n%s\n}","headerSpec":"IF THE DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165593","name":"OnConnected","listener":"Instagram","description":"To Check If Device If Connected","parameters":""},{"code":"public void _NotConnected () {\n%s\n}","headerSpec":"IF DEVICE IS CONNECTED THEN","var":"InstagramDownloader","icon":"2131165575","name":"OnNotConnected","listener":"Instagram","description":"To Check If Device Is Connected !","parameters":""},{"code":"%s","headerSpec":"### On Try to download","var":"InstagramDownloader","icon":"2131165538","name":"TryDownload","listener":"Instagram//ArabWare","description":"Start","parameters":""},{"code":"public void onPricesUpdated(@NonNull Map\u003cString, DataWrappers.ProductDetails\u003e _prices) {\n%s\n}","var":"IapConnector","headerSpec":"onPricesUpdated %m.varMap.prices","name":"onPricesUpdated","listener":"Google Play Billing Purchase","icon":"2131165549","description":"When prices was updated","parameters":""},{"code":"public void onProductPurchased(@NonNull DataWrappers.PurchaseInfo purchaseInfo) {\nString _purchasedProduct \u003d purchaseInfo.getSku();\n%s\n}","var":"IapConnector","headerSpec":"onProductPurchased %s.purchasedProduct","name":"onProductPurchased","listener":"Google Play Billing Purchase","icon":"2131165319","description":"When product was purchased","parameters":""},{"code":"public void onProductRestored(@NonNull DataWrappers.PurchaseInfo purchaseInfo) {\nString _restoredProduct \u003d purchaseInfo.getSku();\n%s\n}","var":"IapConnector","headerSpec":"onProductRestored %s.restoredProduct","name":"onProductRestored","listener":"Google Play Billing Purchase","icon":"2131165407","description":"When purchased products restored","parameters":""},{"code":"public void onPricesUpdated(@NonNull Map\u003cString, DataWrappers.ProductDetails\u003e _prices) {\n%s\n}","var":"IapConnector","headerSpec":"onPricesUpdated %m.varMap.prices","name":"pricesUpdated","listener":"Google Play Billing Subscription","icon":"2131165549","description":"When subscription prices updated","parameters":""},{"code":"public void onSubscriptionPurchased(@NonNull DataWrappers.PurchaseInfo purchaseInfo) {\nString _subscriptionInfo \u003d purchaseInfo.getSku();\n%s\n}","var":"IapConnector","headerSpec":"onSubscriptionPurchased %s.subscriptionInfo","name":"onSubscriptionPurchased","listener":"Google Play Billing Subscription","icon":"2131165324","description":"When subscription was purchased","parameters":""},{"code":"public void onSubscriptionRestored(@NonNull DataWrappers.PurchaseInfo purchaseInfo) {\nString _restoredSubscription \u003d purchaseInfo.getSku();\n%s\n}","var":"IapConnector","headerSpec":"onSubscriptionRestored %s.restoredSubscription","name":"onSubscriptionRestored","listener":"Google Play Billing Subscription","icon":"2131165319","description":"When subscription was restored","parameters":""},{"code":"bottomAppBar.setOnMenuItemClickListener(new Toolbar.OnMenuItemClickListener() {\n    @Override\n    public boolean onMenuItemClick(MenuItem menuItem) {\n        switch (menuItem.getItemId()) {\n%s\ndefault:\n                return false;\n        }\n    }\n});","var":"BottomAppBar","headerSpec":"When bottom app bar item clicked","name":"onBottomAppBarItemClicked","listener":"BottomAppBar","icon":"2131165565","description":"onItemClicked","parameters":""},{"code":"bottomAppBar.setNavigationOnClickListener(new View.OnClickListener() {\n\t@Override\n\tpublic void onClick(View v) {\n\t\t%s\n\t}\n\n});\n","var":"BottomAppBar","headerSpec":"When navigation clicked","name":"onBottomAppBarNavigationClicked","listener":"BottomAppBar","icon":"2131165565","description":"onNavigationClicked","parameters":""},{"code":"searchView \u003d findViewById(R.id.searchView);\nsearchView\n    .getEditText()\n    .setOnEditorActionListener(\n        (v, actionId, event) -\u003e {\n          searchBar.setText(searchView.getText());\n          searchView.hide();\n          %s\n          return false;\n        });","var":"SearchBar","headerSpec":"When material search bar text submit","name":"onMaterialSearchBarSearched","listener":"SearchBar","icon":"2131166191","description":"onTextSumbit","parameters":""}]